filter <- function(cases,newCases,newAsymp,deaths,newDeaths,idx) {
asymp <- vector(mode = "numeric", length = length(idx))
cases_ongoing <- vector(mode = "numeric", length = length(idx))
immune <- vector(mode = "numeric", length = length(idx))
asymp[1] <- newAsymp[1]
newCases[1] <- cases[1]
newDeaths[1] <- deaths[1]
for (i in 2:length(idx)) {
discountFactor1 <- (1-r)^(i-idx[1:i-1])
discountFactor2 <- (1-w)^(i-idx[1:i-1])
immune[i] <- immune[i-1] + r * (asymp[i-1] + cases_ongoing[i-1])
asymp[i] <- asymp[i-1] * (1 - r - w) + newAsymp[i]
cases_ongoing[i] <- cases_ongoing[i-1] * (1-r) - newDeaths[i-1] + asymp[i-1] * w + newCases[i]
}
return(list(asymp,cases_ongoing,immune))
}
states[ , c("asymptomatics","cases_ongoing","immune") := filter(cases,newCasesRaw,newAsymptomaticRaw,deaths,newDeathsRaw,index), by = state]
asymp <- vector(mode = "numeric", length = length(idx))
setwd("~/nfernand@princeton.edu/PhD - Thesis/Research/covid-19-data")
source("estimation.R")
source("projections.R")
setwd("~/nfernand@princeton.edu/PhD - Thesis/Research/covid-19-data")
source("estimation.R")
# Clear workspace
rm(list = ls())
library(data.table)
library(ggplot2)
library(ggthemr)
ggthemr("flat")# Set theme -- controls all plots
library(gridExtra)
setwd("~/nfernand@princeton.edu/PhD - Thesis/Research/covid-19-data")
#  Parameters for state space estimation of asymptomatic daily R
f0 <- 0.95  # initial fraction asymptomatic
f <- 0.7 # fraction of new cases that are asymptomatic
r <- 0.1 # fraction of cases that resolve each day
worsenFrac <- 0.2 # fraction of asymnptomatic cases that become symptomatic
w <- ((worsenFrac) / (1- worsenFrac)) * r
states <- fread("us-states.csv")
population <- fread("nst-est2019-alldata.csv")
area <- fread("statesAreas.csv")
setkey(area,State)
setkey(states,state)
states <- area[states]
setnames(states,"State","state")
setkey(population,STATE)
setkey(states,fips)
states <- population[ , .(STATE,POPESTIMATE2019)][states]
setkey(states,state,date)
BigStates <- c("New York","California","Washington","District of Columbia","Illinois","New Jersey","Texas","Michigan","Massachusetts","Florida","Louisiana","Pennsylvania")
states[ , date := as.Date(date)]
states[ , index := rowid(state) - 1]
states[ , logCases := log(cases)]
states[ , logDeaths := log(deaths)]
states[ , newCasesRaw := cases - shift(cases), by = state]
states[ , newDeathsRaw := deaths - shift(deaths), by = state]
states[ , newCases := logCases - shift(logCases), by = state]
states[ , newDeaths := logDeaths - shift(logDeaths), by = state]
states[ , currentCases := cases - deaths]
states[ , newCasesAdjusted := newCasesRaw / shift(currentCases), by = state]
# Con
states[ , newAsymptomaticRaw := newCasesRaw * (f / (1-f)) ]
states[states[ , .I[1], by = state]$V1, newAsymptomaticRaw := (f0 / (1-f0)) * cases]
filter <- function(cases,newCases,newAsymp,deaths,newDeaths,idx) {
asymp <- vector(mode = "numeric", length = length(idx))
cases_ongoing <- vector(mode = "numeric", length = length(idx))
immune <- vector(mode = "numeric", length = length(idx))
asymp[1] <- newAsymp[1]
newCases[1] <- cases[1]
newDeaths[1] <- deaths[1]
for (i in 2:length(idx)) {
discountFactor1 <- (1-r)^(i-idx[1:i-1])
discountFactor2 <- (1-w)^(i-idx[1:i-1])
immune[i] <- immune[i-1] + r * (asymp[i-1] + cases_ongoing[i-1])
asymp[i] <- asymp[i-1] * (1 - r - w) + newAsymp[i]
cases_ongoing[i] <- cases_ongoing[i-1] * (1-r) - newDeaths[i-1] + asymp[i-1] * w + newCases[i]
}
return(list(asymp,cases_ongoing,immune))
}
states[ , c("asymptomatics","cases_ongoing","immune") := filter(cases,newCasesRaw,newAsymptomaticRaw,deaths,newDeathsRaw,index), by = state]
filter <- function(cases,newCases,newAsymp,deaths,newDeaths,idx) {
asymp <- vector(mode = "numeric", length = length(cases))
cases_ongoing <- vector(mode = "numeric", length = length(cases))
immune <- vector(mode = "numeric", length = length(cases))
asymp[1] <- newAsymp[1]
newCases[1] <- cases[1]
newDeaths[1] <- deaths[1]
for (i in 2:length(idx)) {
discountFactor1 <- (1-r)^(i-idx[1:i-1])
discountFactor2 <- (1-w)^(i-idx[1:i-1])
immune[i] <- immune[i-1] + r * (asymp[i-1] + cases_ongoing[i-1])
asymp[i] <- asymp[i-1] * (1 - r - w) + newAsymp[i]
cases_ongoing[i] <- cases_ongoing[i-1] * (1-r) - newDeaths[i-1] + asymp[i-1] * w + newCases[i]
}
return(list(asymp,cases_ongoing,immune))
}
states[ , c("asymptomatics","cases_ongoing","immune") := filter(cases,newCasesRaw,newAsymptomaticRaw,deaths,newDeathsRaw,index), by = state]
filter <- function(cases,newCases,newAsymp,deaths,newDeaths,idx) {
asymp <- vector(mode = "numeric", length = length(cases))
cases_ongoing <- vector(mode = "numeric", length = length(cases))
immune <- vector(mode = "numeric", length = length(cases))
asymp[1] <- newAsymp[1]
newCases[1] <- cases[1]
newDeaths[1] <- deaths[1]
for (i in 2:length(idx)) {
discountFactor1 <- (1-r)^(i-idx[1:i-1])
discountFactor2 <- (1-w)^(i-idx[1:i-1])
#immune[i] <- immune[i-1] + r * (asymp[i-1] + cases_ongoing[i-1])
asymp[i] <- asymp[i-1] * (1 - r - w) + newAsymp[i]
cases_ongoing[i] <- cases_ongoing[i-1] * (1-r) - newDeaths[i-1] + asymp[i-1] * w + newCases[i]
}
return(list(asymp,cases_ongoing,immune))
}
filter <- function(cases,newCases,newAsymp,deaths,newDeaths,idx) {
asymp <- vector(mode = "numeric", length = length(cases))
cases_ongoing <- vector(mode = "numeric", length = length(cases))
#immune <- vector(mode = "numeric", length = length(cases))
asymp[1] <- newAsymp[1]
newCases[1] <- cases[1]
newDeaths[1] <- deaths[1]
for (i in 2:length(idx)) {
discountFactor1 <- (1-r)^(i-idx[1:i-1])
discountFactor2 <- (1-w)^(i-idx[1:i-1])
#immune[i] <- immune[i-1] + r * (asymp[i-1] + cases_ongoing[i-1])
asymp[i] <- asymp[i-1] * (1 - r - w) + newAsymp[i]
cases_ongoing[i] <- cases_ongoing[i-1] * (1-r) - newDeaths[i-1] + asymp[i-1] * w + newCases[i]
}
#return(list(asymp,cases_ongoing,immune))
return(list(asymp,cases_ongoing))
}
#states[ , c("asymptomatics","cases_ongoing","immune") := filter(cases,newCasesRaw,newAsymptomaticRaw,deaths,newDeathsRaw,index), by = state]
states[ , c("asymptomatics","cases_ongoing") := filter(cases,newCasesRaw,newAsymptomaticRaw,deaths,newDeathsRaw,index), by = state]
filter <- function(cases,newCases,newAsymp,deaths,newDeaths,idx) {
asymp <- vector(mode = "numeric", length = length(cases))
cases_ongoing <- vector(mode = "numeric", length = length(cases))
immune <- vector(mode = "numeric", length = length(cases))
asymp[1] <- newAsymp[1]
newCases[1] <- cases[1]
newDeaths[1] <- deaths[1]
for (i in 2:length(idx)) {
immune[i] <- immune[i-1] + r * (asymp[i-1] + cases_ongoing[i-1])
asymp[i] <- asymp[i-1] * (1 - r - w) + newAsymp[i]
cases_ongoing[i] <- cases_ongoing[i-1] * (1-r) - newDeaths[i-1] + asymp[i-1] * w + newCases[i]
}
return(list(asymp,cases_ongoing,immune))
}
states[ , c("asymptomatics","cases_ongoing","immune") := filter(cases,newCasesRaw,newAsymptomaticRaw,deaths,newDeathsRaw,index), by = state]
filter <- function(cases,newCases,newAsymp,deaths,newDeaths) {
asymp <- vector(mode = "numeric", length = length(cases))
cases_ongoing <- vector(mode = "numeric", length = length(cases))
immune <- vector(mode = "numeric", length = length(cases))
asymp[1] <- newAsymp[1]
newCases[1] <- cases[1]
newDeaths[1] <- deaths[1]
for (i in 2:length(cases)) {
immune[i] <- immune[i-1] + r * (asymp[i-1] + cases_ongoing[i-1])
asymp[i] <- asymp[i-1] * (1 - r - w) + newAsymp[i]
cases_ongoing[i] <- cases_ongoing[i-1] * (1-r) - newDeaths[i-1] + asymp[i-1] * w + newCases[i]
}
return(list(asymp,cases_ongoing,immune))
}
states[ , c("asymptomatics","cases_ongoing","immune") := filter(cases,newCasesRaw,newAsymptomaticRaw,deaths,newDeathsRaw), by = state]
# Clear workspace
rm(list = ls())
library(data.table)
library(ggplot2)
library(ggthemr)
ggthemr("flat")# Set theme -- controls all plots
library(gridExtra)
setwd("~/nfernand@princeton.edu/PhD - Thesis/Research/covid-19-data")
#  Parameters for state space estimation of asymptomatic daily R
f0 <- 0.95  # initial fraction asymptomatic
f <- 0.7 # fraction of new cases that are asymptomatic
r <- 0.1 # fraction of cases that resolve each day
worsenFrac <- 0.2 # fraction of asymnptomatic cases that become symptomatic
w <- ((worsenFrac) / (1- worsenFrac)) * r
states <- fread("us-states.csv")
population <- fread("nst-est2019-alldata.csv")
area <- fread("statesAreas.csv")
setkey(area,State)
setkey(states,state)
states <- area[states]
setnames(states,"State","state")
setkey(population,STATE)
setkey(states,fips)
states <- population[ , .(STATE,POPESTIMATE2019)][states]
setkey(states,state,date)
BigStates <- c("New York","California","Washington","District of Columbia","Illinois","New Jersey","Texas","Michigan","Massachusetts","Florida","Louisiana","Pennsylvania")
states[ , date := as.Date(date)]
states[ , index := rowid(state) - 1]
states[ , logCases := log(cases)]
states[ , logDeaths := log(deaths)]
states[ , newCasesRaw := cases - shift(cases), by = state]
states[ , newDeathsRaw := deaths - shift(deaths), by = state]
states[ , newCases := logCases - shift(logCases), by = state]
states[ , newDeaths := logDeaths - shift(logDeaths), by = state]
states[ , currentCases := cases - deaths]
states[ , newCasesAdjusted := newCasesRaw / shift(currentCases), by = state]
# Con
states[ , newAsymptomaticRaw := newCasesRaw * (f / (1-f)) ]
states[states[ , .I[1], by = state]$V1, newAsymptomaticRaw := (f0 / (1-f0)) * cases]
states[states[ , .I[1], by = state]$V1, newCasesRaw := cases]
states[states[ , .I[1], by = state]$V1, newDeathsRaw := deaths]
# Clear workspace
rm(list = ls())
library(data.table)
library(ggplot2)
library(ggthemr)
ggthemr("flat")# Set theme -- controls all plots
library(gridExtra)
setwd("~/nfernand@princeton.edu/PhD - Thesis/Research/covid-19-data")
#  Parameters for state space estimation of asymptomatic daily R
f0 <- 0.95  # initial fraction asymptomatic
f <- 0.7 # fraction of new cases that are asymptomatic
r <- 0.1 # fraction of cases that resolve each day
worsenFrac <- 0.2 # fraction of asymnptomatic cases that become symptomatic
w <- ((worsenFrac) / (1- worsenFrac)) * r
states <- fread("us-states.csv")
population <- fread("nst-est2019-alldata.csv")
area <- fread("statesAreas.csv")
setkey(area,State)
setkey(states,state)
states <- area[states]
setnames(states,"State","state")
setkey(population,STATE)
setkey(states,fips)
states <- population[ , .(STATE,POPESTIMATE2019)][states]
setkey(states,state,date)
BigStates <- c("New York","California","Washington","District of Columbia","Illinois","New Jersey","Texas","Michigan","Massachusetts","Florida","Louisiana","Pennsylvania")
states[ , date := as.Date(date)]
states[ , index := rowid(state) - 1]
states[ , logCases := log(cases)]
states[ , logDeaths := log(deaths)]
states[ , newCasesRaw := cases - shift(cases), by = state]
states[ , newDeathsRaw := deaths - shift(deaths), by = state]
states[ , newCases := logCases - shift(logCases), by = state]
states[ , newDeaths := logDeaths - shift(logDeaths), by = state]
states[ , currentCases := cases - deaths]
states[ , newCasesAdjusted := newCasesRaw / shift(currentCases), by = state]
# Con
states[ , newAsymptomaticRaw := newCasesRaw * (f / (1-f)) ]
states[states[ , .I[1], by = state]$V1, newAsymptomaticRaw := (f0 / (1-f0)) * cases]
states[states[ , .I[1], by = state]$V1, newCasesRaw := cases]
states[states[ , .I[1], by = state]$V1, newDeathsRaw := deaths]
filter <- function(cases,newCases,newAsymp,deaths,newDeaths) {
asymp <- vector(mode = "numeric", length = length(cases))
cases_ongoing <- vector(mode = "numeric", length = length(cases))
immune <- vector(mode = "numeric", length = length(cases))
asymp[1] <- newAsymp[1]
for (i in 2:length(cases)) {
immune[i] <- immune[i-1] + r * (asymp[i-1] + cases_ongoing[i-1])
asymp[i] <- asymp[i-1] * (1 - r - w) + newAsymp[i]
cases_ongoing[i] <- cases_ongoing[i-1] * (1-r) - newDeaths[i-1] + asymp[i-1] * w + newCases[i]
}
return(list(asymp,cases_ongoing,immune))
}
states[ , c("asymptomatics","cases_ongoing","immune") := filter(cases,newCasesRaw,newAsymptomaticRaw,deaths,newDeathsRaw), by = state]
View(states)
states <- states[ date <= as.Date("2020-04-07")]
states[ , c("asymptomatics","cases_ongoing","immune") := filter(cases,newCasesRaw,newAsymptomaticRaw,deaths,newDeathsRaw), by = state]
source('~/nfernand@princeton.edu/PhD - Thesis/Research/covid-19-data/main.R', echo=TRUE)
View(states)
# Clear workspace
rm(list = ls())
library(data.table)
library(ggplot2)
library(ggthemr)
ggthemr("flat")# Set theme -- controls all plots
library(gridExtra)
setwd("~/nfernand@princeton.edu/PhD - Thesis/Research/covid-19-data")
#  Parameters for state space estimation of asymptomatic daily R
f0 <- 0.95  # initial fraction asymptomatic
f <- 0.7 # fraction of new cases that are asymptomatic
r <- 0.1 # fraction of cases that resolve each day
worsenFrac <- 0.2 # fraction of asymnptomatic cases that become symptomatic
w <- ((worsenFrac) / (1- worsenFrac)) * r
states <- fread("us-states.csv")
View(states)
# Clear workspace
rm(list = ls())
library(data.table)
library(ggplot2)
library(ggthemr)
ggthemr("flat")# Set theme -- controls all plots
library(gridExtra)
setwd("~/nfernand@princeton.edu/PhD - Thesis/Research/covid-19-data")
#  Parameters for state space estimation of asymptomatic daily R
f0 <- 0.95  # initial fraction asymptomatic
f <- 0.7 # fraction of new cases that are asymptomatic
r <- 0.1 # fraction of cases that resolve each day
worsenFrac <- 0.2 # fraction of asymnptomatic cases that become symptomatic
w <- ((worsenFrac) / (1- worsenFrac)) * r
states <- fread("us-states.csv")
population <- fread("nst-est2019-alldata.csv")
area <- fread("statesAreas.csv")
setkey(area,State)
setkey(states,state)
states <- area[states]
setnames(states,"State","state")
setkey(population,STATE)
setkey(states,fips)
states <- population[ , .(STATE,POPESTIMATE2019)][states]
setkey(states,state,date)
BigStates <- c("New York","California","Washington","District of Columbia","Illinois","New Jersey","Texas","Michigan","Massachusetts","Florida","Louisiana","Pennsylvania")
states[ , date := as.Date(date)]
states[ , index := rowid(state) - 1]
states[ , logCases := log(cases)]
states[ , logDeaths := log(deaths)]
states[ , newCasesRaw := cases - shift(cases), by = state]
states[ , newDeathsRaw := deaths - shift(deaths), by = state]
states[ , newCases := logCases - shift(logCases), by = state]
states[ , newDeaths := logDeaths - shift(logDeaths), by = state]
states[ , currentCases := cases - deaths]
states[ , newCasesAdjusted := newCasesRaw / shift(currentCases), by = state]
# Con
states[ , newAsymptomaticRaw := newCasesRaw * (f / (1-f)) ]
states[states[ , .I[1], by = state]$V1, newAsymptomaticRaw := (f0 / (1-f0)) * cases]
states[states[ , .I[1], by = state]$V1, newCasesRaw := cases]
states[states[ , .I[1], by = state]$V1, newDeathsRaw := deaths]
filter <- function(cases,newCases,newAsymp,deaths,newDeaths) {
asymp <- vector(mode = "numeric", length = length(cases))
cases_ongoing <- vector(mode = "numeric", length = length(cases))
immune <- vector(mode = "numeric", length = length(cases))
asymp[1] <- newAsymp[1]
for (i in 2:length(cases)) {
immune[i] <- immune[i-1] + r * (asymp[i-1] + cases_ongoing[i-1])
asymp[i] <- asymp[i-1] * (1 - r - w) + newAsymp[i]
cases_ongoing[i] <- cases_ongoing[i-1] * (1-r) - newDeaths[i-1] + asymp[i-1] * w + newCases[i]
}
return(list(asymp,cases_ongoing,immune))
}
unique(states[ , .(STATE,state)])
temp <- unique(states[ , .(STATE,state)])
View(temp)
# Clear workspace
rm(list = ls())
library(data.table)
library(ggplot2)
library(ggthemr)
ggthemr("flat")# Set theme -- controls all plots
library(gridExtra)
setwd("~/nfernand@princeton.edu/PhD - Thesis/Research/covid-19-data")
#  Parameters for state space estimation of asymptomatic daily R
f0 <- 0.95  # initial fraction asymptomatic
f <- 0.7 # fraction of new cases that are asymptomatic
r <- 0.1 # fraction of cases that resolve each day
worsenFrac <- 0.2 # fraction of asymnptomatic cases that become symptomatic
w <- ((worsenFrac) / (1- worsenFrac)) * r
states <- fread("us-states.csv")
states <- states[fips <= 56]
population <- fread("nst-est2019-alldata.csv")
area <- fread("statesAreas.csv")
setkey(area,State)
setkey(states,state)
states <- area[states]
setnames(states,"State","state")
setkey(population,STATE)
setkey(states,fips)
states <- population[ , .(STATE,POPESTIMATE2019)][states]
setkey(states,state,date)
BigStates <- c("New York","California","Washington","District of Columbia","Illinois","New Jersey","Texas","Michigan","Massachusetts","Florida","Louisiana","Pennsylvania")
states[ , date := as.Date(date)]
states[ , index := rowid(state) - 1]
states[ , logCases := log(cases)]
states[ , logDeaths := log(deaths)]
states[ , newCasesRaw := cases - shift(cases), by = state]
states[ , newDeathsRaw := deaths - shift(deaths), by = state]
states[ , newCases := logCases - shift(logCases), by = state]
states[ , newDeaths := logDeaths - shift(logDeaths), by = state]
states[ , currentCases := cases - deaths]
states[ , newCasesAdjusted := newCasesRaw / shift(currentCases), by = state]
# Con
states[ , newAsymptomaticRaw := newCasesRaw * (f / (1-f)) ]
states[states[ , .I[1], by = state]$V1, newAsymptomaticRaw := (f0 / (1-f0)) * cases]
states[states[ , .I[1], by = state]$V1, newCasesRaw := cases]
states[states[ , .I[1], by = state]$V1, newDeathsRaw := deaths]
filter <- function(cases,newCases,newAsymp,deaths,newDeaths) {
asymp <- vector(mode = "numeric", length = length(cases))
cases_ongoing <- vector(mode = "numeric", length = length(cases))
immune <- vector(mode = "numeric", length = length(cases))
asymp[1] <- newAsymp[1]
for (i in 2:length(cases)) {
immune[i] <- immune[i-1] + r * (asymp[i-1] + cases_ongoing[i-1])
asymp[i] <- asymp[i-1] * (1 - r - w) + newAsymp[i]
cases_ongoing[i] <- cases_ongoing[i-1] * (1-r) - newDeaths[i-1] + asymp[i-1] * w + newCases[i]
}
return(list(asymp,cases_ongoing,immune))
}
states[ , c("asymptomatics","cases_ongoing","immune") := filter(cases,newCasesRaw,newAsymptomaticRaw,deaths,newDeathsRaw), by = state]
source('~/nfernand@princeton.edu/PhD - Thesis/Research/covid-19-data/main.R', echo=TRUE)
# Clear workspace
rm(list = ls())
library(data.table)
library(ggplot2)
library(ggthemr)
ggthemr("flat")# Set theme -- controls all plots
library(gridExtra)
setwd("~/nfernand@princeton.edu/PhD - Thesis/Research/covid-19-data")
complete <- tidyr::complete
na.locf <- zoo::na.locf
f0 <- 0.95  # initial fraction asymptomatic
f <- 0.7 # fraction of new cases that are asymptomatic
r <- 0.1 # fraction of cases that resolve each day
worsenFrac <- 0.2 # fraction of asymnptomatic cases that become symptomatic
w <- ((worsenFrac) / (1- worsenFrac)) * r
# Factor by which state-specific R is adjusted
factor <- 1
states <- fread("statesModified.csv")
deathRate <- states[ , .SD[.N], by = state][ , sum(na.omit(deaths)) / sum(na.omit(cases)), by = state]
View(deathRate)
deathRate <- states[ , .SD[.N], by = state][ , sum(na.omit(deaths)) / sum(na.omit(cases))]
deathRateStates <- states[ , .SD[.N], by = state][ , .(deathRate = sum(na.omit(deaths)) / sum(na.omit(cases))), by = state]
deathRate <- states[ , .SD[.N], by = state][ , sum(na.omit(deaths)) / sum(na.omit(cases))]
setkey(deathRateStates,state)
setkey(states,state)
states <- deathRateStates[states]
View(states)
source("projections.R")
source("projections.R")
source("projections.R")
source("projections.R")
source("projections.R")
View(states)
source("projections.R")
setwd("~/nfernand@princeton.edu/PhD - Thesis/Research/covid-19-data")
source("estimation.R")
source("projections.R")
setwd("~/nfernand@princeton.edu/PhD - Thesis/Research/covid-19-data")
source("estimation.R")
source("projections.R")
View(UStotals)
View(UStotals)
setwd("~/nfernand@princeton.edu/PhD - Thesis/Research/covid-19-data")
source("estimation.R")
source("projections.R")
setwd("~/nfernand@princeton.edu/PhD - Thesis/Research/covid-19-data")
source("estimation.R")
source("projections.R")
# Plot necessary factors
ggplot(Rtable[ , .(necessaryFactor)] , aes(x = necessaryFactor)) +
stat_density(geom = "line", color = "Density") +
geom_histogram(bins = 50)
# Plot necessary factors
ggplot(Rtable[ , .(necessaryFactor)] , aes(x = necessaryFactor)) +
stat_density(geom = "line", color = density) +
geom_histogram(bins = 50)
# Plot necessary factors
ggplot(Rtable[ , .(necessaryFactor)] , aes(x = necessaryFactor)) +
stat_density(geom = "line") +
geom_histogram(bins = 50)
# Plot necessary factors
ggplot(Rtable[ , .(necessaryFactor)] , aes(x = necessaryFactor)) +
geom_histogram(bins = 50) +
stat_density(geom = "line")
?stat_density
# Plot necessary factors
ggplot(Rtable[ , .(necessaryFactor)] , aes(x = necessaryFactor)) +
geom_histogram(bins = 50) +
stat_density(geom = "line", color = "black")
# Plot necessary factors
ggplot(Rtable[ , .(necessaryFactor)] , aes(x = necessaryFactor)) +
geom_histogram(bins = 50) +
stat_density(geom = "line", color = "grey")
# Plot necessary factors
ggplot(Rtable[ , .(necessaryFactor)] , aes(x = necessaryFactor)) +
geom_histogram(bins = 50) +
stat_density(geom = "line", color = "red")
# Plot necessary factors
ggplot(Rtable[ , .(necessaryFactor)] , aes(x = necessaryFactor)) +
geom_histogram(bins = 50) +
stat_density(geom = "line", color = "black", linetype = "dotted")
# Plot necessary factors
ggplot(Rtable[ , .(necessaryFactor)] , aes(x = necessaryFactor)) +
geom_histogram(bins = 50) +
stat_density(geom = "line", color = "black", linetype = "dashed")
?stat_density
# Plot necessary factors
ggplot(Rtable[ , .(necessaryFactor)] , aes(x = necessaryFactor)) +
geom_histogram(bins = 50) +
stat_density(geom = "line", color = "black", linetype = "dashed", size = 2)
# Plot necessary factors
ggplot(Rtable[ , .(necessaryFactor)] , aes(x = necessaryFactor)) +
geom_histogram(bins = 50) +
stat_density(geom = "line", color = "black", linetype = "dashed", size = 1)
# Plot necessary factors
ggplot(Rtable[ , .(necessaryFactor)] , aes(x = necessaryFactor)) +
geom_histogram(bins = 50) +
stat_density(geom = "line", color = "black", linetype = "dashed", size = 1)
ggsave("necessaryR_adjustment.pdf", plot = last_plot(), width = 10, height = 6, units = "in")
setwd("~/nfernand@princeton.edu/PhD - Thesis/Research/covid-19-data")
source("estimation.R")
source("projections.R")
source('~/nfernand@princeton.edu/PhD - Thesis/Research/covid-19-data/main.R', echo=TRUE)
temp <- UStotals[variable == "Deaths"]
temp <- UStotals[variableType == "Deaths"]
View(temp)
temp <- UStotals[variableType == "deaths"]
View(temp)
temp <- UStotals[variableType == "Deaths"]
temp <- UStotals[variable == "eaths"]
temp <- UStotals[variable == "deaths"]
temp[ , newDeaths := deaths = shift(deaths)]
temp[ , newDeaths := deaths - shift(deaths)]
temp[ , newDeaths := value - shift(value)]
View(temp)
temp <- UStotals[variable == "cases"]
temp[ , newCases := value - shift(value)]
View(temp)
temp <- UStotals[variable == "cases (ongoing)"]
temp <- UStotals[variableType == "Cases"]
temp <- UStotals[variable == "cases_ongoing"]
temp[ , newCases := value - shift(value)]
View(temp)
