## Make some quick plots for diagnostics
ggplot(pwt[alpha3 == "USA" ], aes(year)) +
geom_line(aes(y = lrtfpna_chg7, color = "lrtfpna_chg7")) +
geom_line(aes(y = lrgdpnaPerCapita_chg7_nonTFP, color = "lrgdpnaPerCapita_chg7_nonTFP"))
#############
####### Bring in SWID data to do extrapolation of Gini
##########
swiid <- fread("data/raw/swiid8_2_summary.csv")[ , .(country,year,gini_disp,gini_mkt)]
setkey(swiid,country,year)
setkey(pwt,country,year)
pwt <- swiid[pwt]
Z <- lm(gini_disp ~ lrgdpnaPerCapita + lcgdpoPerCapita + year + factor(alpha3), data = pwt, na.action = na.exclude)
summary(Z)
Zfe <- plm(gini_disp ~ lrgdpnaPerCapita + lcgdpoPerCapita + year, data = pwt, na.action = na.exclude, index = c("alpha3"), model = "within")
summary(Zfe)
predictions <- predict(Zfe)
# Run regression and extract coefficients
pwt[ , gini_disp_chg1 := gini_disp - shift(gini_disp), by = country]
pwt[ , gini_mkt_chg1 := gini_mkt - shift(gini_mkt), by = country]
pwt[ , lcgdpoPerCapita_gap_chg1 := 100 * (lcgdpoPerCapita_gap - shift(lcgdpoPerCapita_gap)), by = country]
pwt[ , gini_disp_avg7 := Reduce(`+`,shift(gini_disp,n= 0L:6L,type = "lag"))/7, by = "countrycode"]
pwt[ , gini_mkt_avg7 := Reduce(`+`,shift(gini_mkt,n= 0L:6L,type = "lag"))/7, by = "countrycode"]
ggplot(pwt, aes(x = year, y = gini_disp, color = subRegion_new)) +
geom_line()
ggplot(pwt, aes(x = year, y = gini_disp)) +
geom_line()
ggplot(pwt, aes(x = year, y = gini_disp, color = subRegion_new)) +
geom_point()
ggplot(pwt[subRegion_new == "Latin America and the Caribbean"], aes(x = year, y = gini_disp, color = subRegion_new)) +
geom_point()
ggplot(pwt[subRegion_new == "Latin America and the Caribbean"], aes(x = year, y = gini_disp, color = countrycode)) +
geom_point()
ggplot(pwt[subRegion_new == "Latin America and the Caribbean"], aes(x = year, y = gini_disp, linetype = countrycode)) +
geom_point()
ggplot(pwt[subRegion_new == "Latin America and the Caribbean"], aes(x = year, y = gini_disp, color = alpha3)) +
geom_point()
ggplot(pwt[subRegion_new == "Latin America and the Caribbean"], aes(x = year, y = gini_disp, linetyep = alpha3)) +
geom_point()
ggplot(pwt[subRegion_new == "Latin America and the Caribbean"], aes(x = year, y = gini_disp, linetype = alpha3)) +
geom_point()
ggplot(pwt[subRegion_new == "Latin America and the Caribbean"], aes(x = year, y = gini_disp, linetype = alpha3)) +
geom_line()
ggplot(pwt[subRegion_new == "Latin America and the Caribbean"], aes(x = year, y = gini_disp)) +
geom_line()
ggplot(pwt[subRegion_new == "Latin America and the Caribbean"], aes(x = year, y = gini_disp, by = alpha3)) +
geom_line()
ggplot(pwt[], aes(x = year, y = gini_disp, by = alpha3, color = subRegion_new)) +
geom_line()
ggplot(pwt[subRegion_new != "Others"], aes(x = year, y = gini_disp, by = alpha3, color = subRegion_new)) +
geom_line()
library(data.table)
library(readstata13)
library(openxlsx)
library(gridExtra)
library(xtable)
library(ggplot2)
library(ggthemr)
library(kableExtra)
rm(list = ls())
setwd("~/nfernand@princeton.edu/PhD - Thesis/Research/Inequality and productivity growth in LAC")
ggthemr("flat")
pwt <- data.table(read.dta13("data/raw/pwt91.dta"))
pwt <- pwt[ , .(countrycode,country,year,cgdpo,rtfpna,rgdpna,rgdpo,pop)]
pwt <- pwt[order(countrycode,year)]
##### Select time frame
pwt <- pwt[ year >= 1960]
##### Select sample of countries
pwt[ , numComplete := sum(complete.cases(cgdpo,rgdpna,rtfpna,pop)), by = "countrycode"]
pwt[ , numObs := .N, by = "countrycode"]
pwt[ numComplete == numObs, noIncomplete := 1]
temp <- unique(pwt, by = "countrycode")[order(noIncomplete)]
noIncompletes <- temp[ noIncomplete == 1]
pwt <- pwt[numComplete >= 54]
###### Variable construction
# Construct US pop variable
usPop <- pwt[ countrycode == "USA", .(year,pop)]
names(usPop) <- c("year","usPop")
setkey(usPop,year)
setkey(pwt,year)
pwt <- usPop[pwt]
# Construct per capita variables
pwt[ , rgdpnaPerCapita := rgdpna / pop]
pwt[ , rgdpoPerCapita := rgdpo / pop]
pwt[ , cgdpoPerCapita := cgdpo /pop]
# Constuct log transformation of
pwt[ , lrtfpna := log(rtfpna)]
pwt[ , lrgdpnaPerCapita := log(rgdpnaPerCapita)]
pwt[ , lrgdpoPerCapita := log(rgdpoPerCapita)]
pwt[ , lcgdpoPerCapita := log(cgdpoPerCapita)]
## Extrapolation
# Construct log changes
pwt[ , lrtfpna_chg1 := lrtfpna - shift(lrtfpna, n = 1L, type = "lag"), by = .(countrycode)]
pwt[ , lrgdpnaPerCapita_chg1 := lrgdpnaPerCapita - shift(lrgdpnaPerCapita, n = 1L, type = "lag"), by = .(countrycode)]
# Run regression of log change of rtfpna on log change of rgdpna, by country
regCoefs <- pwt[ , c(extrapRegCoefs = as.list(coef(lm(lrtfpna_chg1 ~ lrgdpnaPerCapita_chg1))), extrapRegSEs = as.list(coef(summary(lm(lrtfpna_chg1 ~ lrgdpnaPerCapita_chg1)))[,2]), extrapRegPVals = as.list(coef(summary(lm(lrtfpna_chg1 ~ lrgdpnaPerCapita_chg1)))[,4])), by = .(countrycode)]
# Merge regression coefficients back to main data
setkey(regCoefs,countrycode)
setkey(pwt,countrycode)
pwt <- regCoefs[ , .(countrycode,`extrapRegCoefs.(Intercept)`,extrapRegCoefs.lrgdpnaPerCapita_chg1)][pwt]
# Impute changes when lrtfpna_chg1 is na, impute using regression coefficients
pwt[ is.na(lrtfpna_chg1) , lrtfpna_chg1 := `extrapRegCoefs.(Intercept)` + lrgdpnaPerCapita_chg1 * extrapRegCoefs.lrgdpnaPerCapita_chg1]
# Finally, extrapolate -- this was kind of tricky..there's probably a much better way, no?
pwt <- pwt[order(country,-year)]
pwt[, lrtfpna_cumChg := cumsum(-lrtfpna_chg1), by = .(countrycode)]
pwt[, lrtfpna_extrap := .SD[1]$lrtfpna + shift(lrtfpna_cumChg, n = 1L, type = "lag"), by = .(countrycode)]
# When missing, construct indicator for extrapolation
# and then compute extrapolation
pwt[is.na(lrtfpna) & !is.na(lrtfpna_extrap), isExtrapolated := 1]
pwt[is.na(isExtrapolated), isExtrapolated := 0]
fwrite(pwt[ isExtrapolated == 1, .(country, countrycode, year)], "data/extrapolatedCountryYears.csv")
pwt[is.na(lrtfpna), lrtfpna := lrtfpna_extrap]
# Final diagnostic to check that nothing is missing
pwt[ , numComplete := sum(complete.cases(lrtfpna,lrgdpnaPerCapita,lrgdpoPerCapita,lcgdpoPerCapita)), by = "countrycode"]
pwt[ , numObs := .N, by = "countrycode"]
pwt[ numComplete == numObs, noIncomplete := 1]
pwt[ noIncomplete != 1]
pwt <- pwt[ , .(country,countrycode,isExtrapolated,year,lrtfpna,lrgdpnaPerCapita,lrgdpoPerCapita,lcgdpoPerCapita)][order(country,year)]
fwrite(pwt,"data/pwt91_cleaned.csv")
##### Next stage: analyze data
rm(list = ls())
ggthemr("flat")
pwt <- fread("data/pwt91_cleaned.csv")
# Construct 7-year changes
pwt[ , lrgdpnaPerCapita_chg7 := (lrgdpnaPerCapita - shift(lrgdpnaPerCapita, n = 7L, type = "lag"))/7, by = "countrycode"]
pwt[ , lrtfpna_chg7 := (lrtfpna - shift(lrtfpna, n = 7L, type = "lag"))/7, by = "countrycode"]
# Construt 1-year changes and decomposition
pwt[ , lrgdpnaPerCapita_chg1 := (lrgdpnaPerCapita - shift(lrgdpnaPerCapita, n = 1L, type = "lag")), by = "countrycode"]
pwt[ , lrtfpna_chg1 := (lrtfpna - shift(lrtfpna, n = 1L, type = "lag")), by = "countrycode"]
# Put in % terms
pwt[ ,c("lrgdpnaPerCapita_chg7","lrtfpna_chg7","lrgdpnaPerCapita_chg1",
"lrtfpna_chg1") := lapply(.SD, function(x) 100*x), ,.SDcols = c("lrgdpnaPerCapita_chg7","lrtfpna_chg7","lrgdpnaPerCapita_chg1",
"lrtfpna_chg1")]
# Construct decompositions
pwt[ , lrgdpnaPerCapita_chg7_nonTFP := lrgdpnaPerCapita_chg7 - lrtfpna_chg7]
pwt[ , lrgdpnaPerCapita_chg1_nonTFP := lrgdpnaPerCapita_chg1 - lrtfpna_chg1]
# Construct cgdpoPerCapita relative to US (7-year averages, same as before)
lcgdpoPerCapitaUSA <- pwt[countrycode == "USA"][ , .(year,lcgdpoPerCapita)]
setkey(lcgdpoPerCapitaUSA,year)
setnames(lcgdpoPerCapitaUSA,"lcgdpoPerCapita","lcgdpoPerCapitaUSA")
setkey(pwt,year)
pwt <- lcgdpoPerCapitaUSA[pwt]
pwt[ , lcgdpoPerCapita_gap :=  lcgdpoPerCapita - lcgdpoPerCapitaUSA]
setkey(pwt,countrycode,year)
pwt[ , lcgdpoPerCapita_gap_avg7 := Reduce(`+`,shift(lcgdpoPerCapita_gap,n= 0L:6L,type = "lag"))/7, by = "countrycode"]
#############
### Classify into regions
#############
isocodesRegions <- fread("data/raw/isocodesRegions.csv")
setnames(isocodesRegions,"alpha-3","alpha3")
setnames(isocodesRegions,"sub-region","subRegion")
setkey(isocodesRegions,alpha3)
setkey(pwt,countrycode)
isocodesRegions <- isocodesRegions[ , .(alpha3,region,subRegion)]
pwt <- isocodesRegions[pwt]
pwt <- pwt[order(country,year)]
pwt[ , subRegion_new := subRegion]
pwt[ subRegion == "Sub-Saharan Africa" , subRegion_new := "Africa"]
pwt[ subRegion == "Northern Africa" , subRegion_new := "Africa"]
pwt[alpha3 == "HKG" | alpha3 == "KOR" | alpha3 == "TWN" | alpha3 == "SGP" , subRegion_new := "East Asian Tigers"]
pwt[alpha3 == "USA" , subRegion_new := "United States"]
pwt[ subRegion_new != "United States" & subRegion_new != "East Asian Tigers" & subRegion_new != "Africa" & subRegion_new != "Latin America and the Caribbean", subRegion_new := "Others"]
### Generate regional dummies
pwt[subRegion_new == "Latin America and the Caribbean" , isLAC := 1]
pwt[is.na(isLAC) , isLAC := 0]
pwt[subRegion_new == "Africa" , isAfrica := 1]
pwt[is.na(isAfrica) , isAfrica := 0]
pwt[subRegion_new == "East Asian Tigers" , isEAT := 1]
pwt[is.na(isEAT) , isEAT := 0]
## Make some quick plots for diagnostics
ggplot(pwt[alpha3 == "USA" ], aes(year)) +
geom_line(aes(y = lrtfpna_chg7, color = "lrtfpna_chg7")) +
geom_line(aes(y = lrgdpnaPerCapita_chg7_nonTFP, color = "lrgdpnaPerCapita_chg7_nonTFP"))
#############
####### Bring in SWID data to do extrapolation of Gini
##########
swiid <- fread("data/raw/swiid8_2_summary.csv")[ , .(country,year,gini_disp,gini_mkt)]
setkey(swiid,country,year)
setkey(pwt,country,year)
pwt <- swiid[pwt]
Z <- lm(gini_disp ~ lrgdpnaPerCapita + lcgdpoPerCapita + year + factor(alpha3), data = pwt, na.action = na.exclude)
summary(Z)
Zfe <- plm(gini_disp ~ lrgdpnaPerCapita + lcgdpoPerCapita + year, data = pwt, na.action = na.exclude, index = c("alpha3"), model = "within")
summary(Zfe)
predictions <- predict(Zfe)
# Run regression and extract coefficients
pwt[ , gini_disp_chg1 := gini_disp - shift(gini_disp), by = country]
pwt[ , gini_mkt_chg1 := gini_mkt - shift(gini_mkt), by = country]
pwt[ , lcgdpoPerCapita_gap_chg1 := 100 * (lcgdpoPerCapita_gap - shift(lcgdpoPerCapita_gap)), by = country]
pwt[ , gini_disp_avg7 := Reduce(`+`,shift(gini_disp,n= 0L:6L,type = "lag"))/7, by = "countrycode"]
pwt[ , gini_mkt_avg7 := Reduce(`+`,shift(gini_mkt,n= 0L:6L,type = "lag"))/7, by = "countrycode"]
ggplot(pwt[subRegion_new != "Others"], aes(x = year, y = gini_disp, by = alpha3, color = subRegion_new)) +
geom_line()
fwrite(pwt,"data/pwt91_cleaned_swiid.csv")
pwt <- fread("data/pwt91_cleaned_swiid.csv")
regCoefs_disp <- pwt[ , c(extrapRegCoefs = as.list(coef(lm(gini_disp_chg1 ~ lrgdpnaPerCapita_chg1 + lcgdpoPerCapita_gap_chg1))),
extrapRegSEs = as.list(coef(summary(lm(gini_disp_chg1 ~ lrgdpnaPerCapita_chg1 + lcgdpoPerCapita_gap_chg1)))[,2]),
extrapRegPVals = as.list(coef(summary(lm(gini_disp_chg1 ~ lrgdpnaPerCapita_chg1 + lcgdpoPerCapita_gap_chg1)))[,4]))]
#residuals <- resid(lm(gini_disp_chg1 ~ lrgdpnaPerCapita_chg1 + lcgdpoPerCapita_gap_chg1, data = pwt), na.action=na.exclude)
Zfd <- lm(gini_disp_chg1 ~ factor(year) + lrgdpnaPerCapita_chg1 + lcgdpoPerCapita_gap_chg1, data = pwt, na.action = na.exclude)
summary(Zfd)
Z2 <- plm(gini_disp ~ lrgdpnaPerCapita + lcgdpoPerCapita_gap, data = pwt, na.action = na.exclude)
residuals <- data.table(residuals(Zfd))
library(plm)
regCoefs_disp <- pwt[ , c(extrapRegCoefs = as.list(coef(lm(gini_disp_chg1 ~ lrgdpnaPerCapita_chg1 + lcgdpoPerCapita_gap_chg1))),
extrapRegSEs = as.list(coef(summary(lm(gini_disp_chg1 ~ lrgdpnaPerCapita_chg1 + lcgdpoPerCapita_gap_chg1)))[,2]),
extrapRegPVals = as.list(coef(summary(lm(gini_disp_chg1 ~ lrgdpnaPerCapita_chg1 + lcgdpoPerCapita_gap_chg1)))[,4]))]
#residuals <- resid(lm(gini_disp_chg1 ~ lrgdpnaPerCapita_chg1 + lcgdpoPerCapita_gap_chg1, data = pwt), na.action=na.exclude)
Zfd <- lm(gini_disp_chg1 ~ factor(year) + lrgdpnaPerCapita_chg1 + lcgdpoPerCapita_gap_chg1, data = pwt, na.action = na.exclude)
summary(Zfd)
Z2 <- plm(gini_disp ~ lrgdpnaPerCapita + lcgdpoPerCapita_gap, data = pwt, na.action = na.exclude)
residuals <- data.table(residuals(Zfd))
pwt[ , resid := residuals$V1]
ggplot(pwt[ alpha3 %in% c("URY","ARG","USA")], aes(x = year, y = resid, color = country)) +
geom_line()
residualsAutocovarianceReg <- lm(resid ~ shift(resid) + shift(resid, n = 2L, type = "lag")
+ shift(resid, n = 3L, type = "lag") + shift(resid, n = 4L, type = "lag")
+ shift(resid, n = 5L, type = "lag") + shift(resid, n = 6L, type = "lag")
+ shift(resid, n = 7L, type = "lag"), data = pwt)
results <- tail(data.table(coef(summary(residualsAutocovarianceReg))),-1)
results[ , lag := seq(1,length(results$Estimate))]
names(results) <- c("coef","se","tstat","pval","lag")
results[ , `:=`(upperbound = coef + 1.96*se, lowerbound = coef - 1.96*se)]
results <- melt(results,id.vars = "lag", measure.vars = c("coef","lowerbound","upperbound"))
ggplot(results, aes(x = lag,y = value, linetype = variable)) +
geom_line() +
labs(title = "Autocovariance of residuals in FD regression") +
scale_linetype_discrete(labels = c("Estimate","-1.96 * SE", "+1.96 * SE"))
setwd("~/nfernand@princeton.edu/PhD - Thesis/Research/covid-19-data")
source("estimation.R")
source("projections.R")
library(data.table)
library(readstata13)
library(openxlsx)
library(gridExtra)
library(xtable)
library(ggplot2)
library(ggthemr)
library(kableExtra)
rm(list = ls())
setwd("~/nfernand@princeton.edu/PhD - Thesis/Research/Inequality and productivity growth in LAC")
ggthemr("flat")
pwt <- data.table(read.dta13("data/raw/pwt91.dta"))
pwt <- pwt[ , .(countrycode,country,year,cgdpo,rtfpna,rgdpna,rgdpo,pop)]
pwt <- pwt[order(countrycode,year)]
##### Select time frame
pwt <- pwt[ year >= 1960]
##### Select sample of countries
pwt[ , numComplete := sum(complete.cases(cgdpo,rgdpna,rtfpna,pop)), by = "countrycode"]
pwt[ , numObs := .N, by = "countrycode"]
pwt[ numComplete == numObs, noIncomplete := 1]
temp <- unique(pwt, by = "countrycode")[order(noIncomplete)]
noIncompletes <- temp[ noIncomplete == 1]
pwt <- pwt[numComplete >= 54]
###### Variable construction
# Construct US pop variable
usPop <- pwt[ countrycode == "USA", .(year,pop)]
names(usPop) <- c("year","usPop")
setkey(usPop,year)
setkey(pwt,year)
pwt <- usPop[pwt]
# Construct per capita variables
pwt[ , rgdpnaPerCapita := rgdpna / pop]
pwt[ , rgdpoPerCapita := rgdpo / pop]
pwt[ , cgdpoPerCapita := cgdpo /pop]
# Constuct log transformation of
pwt[ , lrtfpna := log(rtfpna)]
pwt[ , lrgdpnaPerCapita := log(rgdpnaPerCapita)]
pwt[ , lrgdpoPerCapita := log(rgdpoPerCapita)]
pwt[ , lcgdpoPerCapita := log(cgdpoPerCapita)]
## Extrapolation
# Construct log changes
pwt[ , lrtfpna_chg1 := lrtfpna - shift(lrtfpna, n = 1L, type = "lag"), by = .(countrycode)]
pwt[ , lrgdpnaPerCapita_chg1 := lrgdpnaPerCapita - shift(lrgdpnaPerCapita, n = 1L, type = "lag"), by = .(countrycode)]
# Run regression of log change of rtfpna on log change of rgdpna, by country
regCoefs <- pwt[ , c(extrapRegCoefs = as.list(coef(lm(lrtfpna_chg1 ~ lrgdpnaPerCapita_chg1))), extrapRegSEs = as.list(coef(summary(lm(lrtfpna_chg1 ~ lrgdpnaPerCapita_chg1)))[,2]), extrapRegPVals = as.list(coef(summary(lm(lrtfpna_chg1 ~ lrgdpnaPerCapita_chg1)))[,4])), by = .(countrycode)]
# Merge regression coefficients back to main data
setkey(regCoefs,countrycode)
setkey(pwt,countrycode)
pwt <- regCoefs[ , .(countrycode,`extrapRegCoefs.(Intercept)`,extrapRegCoefs.lrgdpnaPerCapita_chg1)][pwt]
# Impute changes when lrtfpna_chg1 is na, impute using regression coefficients
pwt[ is.na(lrtfpna_chg1) , lrtfpna_chg1 := `extrapRegCoefs.(Intercept)` + lrgdpnaPerCapita_chg1 * extrapRegCoefs.lrgdpnaPerCapita_chg1]
# Finally, extrapolate -- this was kind of tricky..there's probably a much better way, no?
pwt <- pwt[order(country,-year)]
pwt[, lrtfpna_cumChg := cumsum(-lrtfpna_chg1), by = .(countrycode)]
pwt[, lrtfpna_extrap := .SD[1]$lrtfpna + shift(lrtfpna_cumChg, n = 1L, type = "lag"), by = .(countrycode)]
# When missing, construct indicator for extrapolation
# and then compute extrapolation
pwt[is.na(lrtfpna) & !is.na(lrtfpna_extrap), isExtrapolated := 1]
pwt[is.na(isExtrapolated), isExtrapolated := 0]
fwrite(pwt[ isExtrapolated == 1, .(country, countrycode, year)], "data/extrapolatedCountryYears.csv")
pwt[is.na(lrtfpna), lrtfpna := lrtfpna_extrap]
# Final diagnostic to check that nothing is missing
pwt[ , numComplete := sum(complete.cases(lrtfpna,lrgdpnaPerCapita,lrgdpoPerCapita,lcgdpoPerCapita)), by = "countrycode"]
pwt[ , numObs := .N, by = "countrycode"]
pwt[ numComplete == numObs, noIncomplete := 1]
pwt[ noIncomplete != 1]
pwt <- pwt[ , .(country,countrycode,isExtrapolated,year,lrtfpna,lrgdpnaPerCapita,lrgdpoPerCapita,lcgdpoPerCapita)][order(country,year)]
fwrite(pwt,"data/pwt91_cleaned.csv")
##### Next stage: analyze data
rm(list = ls())
ggthemr("flat")
pwt <- fread("data/pwt91_cleaned.csv")
# Construct 7-year changes
pwt[ , lrgdpnaPerCapita_chg7 := (lrgdpnaPerCapita - shift(lrgdpnaPerCapita, n = 7L, type = "lag"))/7, by = "countrycode"]
pwt[ , lrtfpna_chg7 := (lrtfpna - shift(lrtfpna, n = 7L, type = "lag"))/7, by = "countrycode"]
# Construt 1-year changes and decomposition
pwt[ , lrgdpnaPerCapita_chg1 := (lrgdpnaPerCapita - shift(lrgdpnaPerCapita, n = 1L, type = "lag")), by = "countrycode"]
pwt[ , lrtfpna_chg1 := (lrtfpna - shift(lrtfpna, n = 1L, type = "lag")), by = "countrycode"]
# Put in % terms
pwt[ ,c("lrgdpnaPerCapita_chg7","lrtfpna_chg7","lrgdpnaPerCapita_chg1",
"lrtfpna_chg1") := lapply(.SD, function(x) 100*x), ,.SDcols = c("lrgdpnaPerCapita_chg7","lrtfpna_chg7","lrgdpnaPerCapita_chg1",
"lrtfpna_chg1")]
# Construct decompositions
pwt[ , lrgdpnaPerCapita_chg7_nonTFP := lrgdpnaPerCapita_chg7 - lrtfpna_chg7]
pwt[ , lrgdpnaPerCapita_chg1_nonTFP := lrgdpnaPerCapita_chg1 - lrtfpna_chg1]
# Construct cgdpoPerCapita relative to US (7-year averages, same as before)
lcgdpoPerCapitaUSA <- pwt[countrycode == "USA"][ , .(year,lcgdpoPerCapita)]
setkey(lcgdpoPerCapitaUSA,year)
setnames(lcgdpoPerCapitaUSA,"lcgdpoPerCapita","lcgdpoPerCapitaUSA")
setkey(pwt,year)
pwt <- lcgdpoPerCapitaUSA[pwt]
pwt[ , lcgdpoPerCapita_gap :=  lcgdpoPerCapita - lcgdpoPerCapitaUSA]
setkey(pwt,countrycode,year)
pwt[ , lcgdpoPerCapita_gap_avg7 := Reduce(`+`,shift(lcgdpoPerCapita_gap,n= 0L:6L,type = "lag"))/7, by = "countrycode"]
#############
### Classify into regions
#############
isocodesRegions <- fread("data/raw/isocodesRegions.csv")
setnames(isocodesRegions,"alpha-3","alpha3")
setnames(isocodesRegions,"sub-region","subRegion")
setkey(isocodesRegions,alpha3)
setkey(pwt,countrycode)
isocodesRegions <- isocodesRegions[ , .(alpha3,region,subRegion)]
pwt <- isocodesRegions[pwt]
pwt <- pwt[order(country,year)]
pwt[ , subRegion_new := subRegion]
pwt[ subRegion == "Sub-Saharan Africa" , subRegion_new := "Africa"]
pwt[ subRegion == "Northern Africa" , subRegion_new := "Africa"]
pwt[alpha3 == "HKG" | alpha3 == "KOR" | alpha3 == "TWN" | alpha3 == "SGP" , subRegion_new := "East Asian Tigers"]
pwt[alpha3 == "USA" , subRegion_new := "United States"]
pwt[ subRegion_new != "United States" & subRegion_new != "East Asian Tigers" & subRegion_new != "Africa" & subRegion_new != "Latin America and the Caribbean", subRegion_new := "Others"]
### Generate regional dummies
pwt[subRegion_new == "Latin America and the Caribbean" , isLAC := 1]
pwt[is.na(isLAC) , isLAC := 0]
pwt[subRegion_new == "Africa" , isAfrica := 1]
pwt[is.na(isAfrica) , isAfrica := 0]
pwt[subRegion_new == "East Asian Tigers" , isEAT := 1]
pwt[is.na(isEAT) , isEAT := 0]
## Make some quick plots for diagnostics
ggplot(pwt[alpha3 == "USA" ], aes(year)) +
geom_line(aes(y = lrtfpna_chg7, color = "lrtfpna_chg7")) +
geom_line(aes(y = lrgdpnaPerCapita_chg7_nonTFP, color = "lrgdpnaPerCapita_chg7_nonTFP"))
#############
####### Bring in SWID data to do extrapolation of Gini
##########
swiid <- fread("data/raw/swiid8_2_summary.csv")[ , .(country,year,gini_disp,gini_mkt)]
setkey(swiid,country,year)
setkey(pwt,country,year)
pwt <- swiid[pwt]
Z <- lm(gini_disp ~ lrgdpnaPerCapita + lcgdpoPerCapita + year + factor(alpha3), data = pwt, na.action = na.exclude)
summary(Z)
Zfe <- plm(gini_disp ~ lrgdpnaPerCapita + lcgdpoPerCapita + year, data = pwt, na.action = na.exclude, index = c("alpha3"), model = "within")
summary(Zfe)
predictions <- predict(Zfe)
# Run regression and extract coefficients
pwt[ , gini_disp_chg1 := gini_disp - shift(gini_disp), by = country]
pwt[ , gini_mkt_chg1 := gini_mkt - shift(gini_mkt), by = country]
pwt[ , lcgdpoPerCapita_gap_chg1 := 100 * (lcgdpoPerCapita_gap - shift(lcgdpoPerCapita_gap)), by = country]
pwt[ , gini_disp_avg7 := Reduce(`+`,shift(gini_disp,n= 0L:6L,type = "lag"))/7, by = "countrycode"]
pwt[ , gini_mkt_avg7 := Reduce(`+`,shift(gini_mkt,n= 0L:6L,type = "lag"))/7, by = "countrycode"]
ggplot(pwt[subRegion_new != "Others"], aes(x = year, y = gini_disp, by = alpha3, color = subRegion_new)) +
geom_line()
fwrite(pwt,"data/pwt91_cleaned_swiid.csv")
#pwt <- fread("data/pwt91_cleaned_swiid.csv")
# Disposable gini
regCoefs_disp <- pwt[ , c(extrapRegCoefs = as.list(coef(lm(gini_disp_chg1 ~ lrgdpnaPerCapita_chg1 + lcgdpoPerCapita_gap_chg1))),
extrapRegSEs = as.list(coef(summary(lm(gini_disp_chg1 ~ lrgdpnaPerCapita_chg1 + lcgdpoPerCapita_gap_chg1)))[,2]),
extrapRegPVals = as.list(coef(summary(lm(gini_disp_chg1 ~ lrgdpnaPerCapita_chg1 + lcgdpoPerCapita_gap_chg1)))[,4]))]
#residuals <- resid(lm(gini_disp_chg1 ~ lrgdpnaPerCapita_chg1 + lcgdpoPerCapita_gap_chg1, data = pwt), na.action=na.exclude)
Zfd <- lm(gini_disp_chg1 ~ factor(year) + lrgdpnaPerCapita_chg1 + lcgdpoPerCapita_gap_chg1, data = pwt, na.action = na.exclude)
summary(Zfd)
Z2 <- plm(gini_disp ~ lrgdpnaPerCapita + lcgdpoPerCapita_gap, data = pwt, na.action = na.exclude)
#residuals <- resid(lm(gini_disp_chg1 ~ lrgdpnaPerCapita_chg1 + lcgdpoPerCapita_gap_chg1, data = pwt), na.action=na.exclude)
Zfd <- lm(gini_disp_chg1 ~ factor(year) + factor(alpha3), data = pwt, na.action = na.exclude)
summary(Zfd)
residuals <- data.table(residuals(Zfd))
pwt[ , resid := residuals$V1]
ggplot(pwt[ alpha3 %in% c("URY","ARG","USA")], aes(x = year, y = resid, color = country)) +
geom_line()
residualsAutocovarianceReg <- lm(resid ~ shift(resid) + shift(resid, n = 2L, type = "lag")
+ shift(resid, n = 3L, type = "lag") + shift(resid, n = 4L, type = "lag")
+ shift(resid, n = 5L, type = "lag") + shift(resid, n = 6L, type = "lag")
+ shift(resid, n = 7L, type = "lag"), data = pwt)
results <- tail(data.table(coef(summary(residualsAutocovarianceReg))),-1)
results[ , lag := seq(1,length(results$Estimate))]
names(results) <- c("coef","se","tstat","pval","lag")
results[ , `:=`(upperbound = coef + 1.96*se, lowerbound = coef - 1.96*se)]
results <- melt(results,id.vars = "lag", measure.vars = c("coef","lowerbound","upperbound"))
ggplot(results, aes(x = lag,y = value, linetype = variable)) +
geom_line() +
labs(title = "Autocovariance of residuals in FD regression") +
scale_linetype_discrete(labels = c("Estimate","-1.96 * SE", "+1.96 * SE"))
summary(Zfd)
#residuals <- resid(lm(gini_disp_chg1 ~ lrgdpnaPerCapita_chg1 + lcgdpoPerCapita_gap_chg1, data = pwt), na.action=na.exclude)
Zfd <- lm(gini_disp_chg1 ~ factor(alpha3), data = pwt, na.action = na.exclude)
summary(Zfd)
residuals <- data.table(residuals(Zfd))
pwt[ , resid := residuals$V1]
ggplot(pwt[ alpha3 %in% c("URY","ARG","USA")], aes(x = year, y = resid, color = country)) +
geom_line()
residualsAutocovarianceReg <- lm(resid ~ shift(resid) + shift(resid, n = 2L, type = "lag")
+ shift(resid, n = 3L, type = "lag") + shift(resid, n = 4L, type = "lag")
+ shift(resid, n = 5L, type = "lag") + shift(resid, n = 6L, type = "lag")
+ shift(resid, n = 7L, type = "lag"), data = pwt)
results <- tail(data.table(coef(summary(residualsAutocovarianceReg))),-1)
results[ , lag := seq(1,length(results$Estimate))]
names(results) <- c("coef","se","tstat","pval","lag")
results[ , `:=`(upperbound = coef + 1.96*se, lowerbound = coef - 1.96*se)]
results <- melt(results,id.vars = "lag", measure.vars = c("coef","lowerbound","upperbound"))
ggplot(results, aes(x = lag,y = value, linetype = variable)) +
geom_line() +
labs(title = "Autocovariance of residuals in FD regression") +
scale_linetype_discrete(labels = c("Estimate","-1.96 * SE", "+1.96 * SE"))
#residuals <- resid(lm(gini_disp_chg1 ~ lrgdpnaPerCapita_chg1 + lcgdpoPerCapita_gap_chg1, data = pwt), na.action=na.exclude)
Zfd <- lm(gini_disp_chg1 ~ factor(alpha3) + factor(year), data = pwt, na.action = na.exclude)
summary(Zfd)
Z2 <- plm(gini_disp ~ lrgdpnaPerCapita + lcgdpoPerCapita_gap, data = pwt, na.action = na.exclude)
residuals <- data.table(residuals(Zfd))
pwt[ , resid := residuals$V1]
ggplot(pwt[ alpha3 %in% c("URY","ARG","USA")], aes(x = year, y = resid, color = country)) +
geom_line()
residualsAutocovarianceReg <- lm(resid ~ shift(resid) + shift(resid, n = 2L, type = "lag")
+ shift(resid, n = 3L, type = "lag") + shift(resid, n = 4L, type = "lag")
+ shift(resid, n = 5L, type = "lag") + shift(resid, n = 6L, type = "lag")
+ shift(resid, n = 7L, type = "lag"), data = pwt)
setwd("~/nfernand@princeton.edu/PhD - Thesis/Research/covid-19-data")
source("estimation.R")
source("projections.R")
setwd("~/nfernand@princeton.edu/PhD - Thesis/Research/covid-19-data")
source("estimation.R")
source("projections.R")
setwd("~/nfernand@princeton.edu/PhD - Thesis/Research/covid-19-data")
source("estimation.R")
source("projections.R")
max(UStotals[variable == "projectedDeaths_10"]$value, na.rm = TRUE)
max(UStotals[variable == "deaths"]$value, na.rm = TRUE)
setwd("~/Insync/nfernand@princeton.edu/Google Drive/PhD - Thesis/Research/covid-19-data")
source("estimation.R")
source("projections.R")
max(UStotals[variable == "projectedDeaths_10"]$value, na.rm = TRUE)
max(UStotals[variable == "deaths"]$value, na.rm = TRUE)
# Clear workspace
rm(list = ls())
library(data.table)
library(ggplot2)
library(ggthemr)
ggthemr("flat")# Set theme -- controls all plots
library(gridExtra)
#  Parameters for state space estimation of asymptomatic daily R
f0 <- 0.9  # initial fraction asymptomatic
f <- 0.9 # fraction of new cases that are asymptomatic
r <- 0.1 # fraction of cases that resolve each day
worsenFrac <- 0.2 # fraction of asymnptomatic cases that eventually become symptomatic
w <- ((worsenFrac) / (1- worsenFrac)) * r
states <- fread("us-states.csv")
states <- states[fips <= 56]
population <- fread("nst-est2019-alldata.csv")
area <- fread("statesAreas.csv")
setkey(area,State)
setkey(states,state)
states <- area[states]
setnames(states,"State","state")
setkey(population,STATE)
setkey(states,fips)
states <- population[ , .(STATE,POPESTIMATE2019)][states]
setkey(states,state,date)
BigStates <- c("New York","California","Washington","District of Columbia","Illinois","New Jersey","Texas","Michigan","Massachusetts","Florida","Louisiana","Pennsylvania")
states[ , date := as.Date(date)]
states[ , index := rowid(state) - 1]
states[ , logCases := log(cases)]
states[ , logDeaths := log(deaths)]
states[ , newCasesRaw := cases - shift(cases), by = state]
states[ , newDeathsRaw := deaths - shift(deaths), by = state]
states[ , newCases := logCases - shift(logCases), by = state]
states[ , newDeaths := logDeaths - shift(logDeaths), by = state]
states[ , currentCases := cases - deaths]
states[ , newCasesAdjusted := newCasesRaw / shift(currentCases), by = state]
# Con
states[ , newAsymptomaticRaw := newCasesRaw * (f / (1-f)) ]
states[states[ , .I[1], by = state]$V1, newAsymptomaticRaw := (f0 / (1-f0)) * cases]
states[states[ , .I[1], by = state]$V1, newCasesRaw := cases]
states[states[ , .I[1], by = state]$V1, newDeathsRaw := deaths]
filter <- function(cases,newCases,newAsymp,deaths,newDeaths,fracHistory) {
asymp <- vector(mode = "numeric", length = length(cases))
cases_ongoing <- vector(mode = "numeric", length = length(cases))
immune <- vector(mode = "numeric", length = length(cases))
asymp[1] <- newAsymp[1]
for (i in 2:ceiling(fracHistory*length(cases))) {
immune[i] <- immune[i-1] + r * (asymp[i-1] + cases_ongoing[i-1])
asymp[i] <- asymp[i-1] * (1 - r - w) + newAsymp[i]
cases_ongoing[i] <- cases_ongoing[i-1] * (1-r) - newDeaths[i-1] + asymp[i-1] * w + newCases[i]
}
return(list(asymp,cases_ongoing,immune))
}
# Do for all time
#index = length(states$cases)
# Do for a certain index
fracHistory <- 1
setwd("~/Insync/nfernand@princeton.edu/Google Drive/PhD - Thesis/Research/covid-19-data")
source("estimation.R")
source("projections.R")
max(UStotals[variable == "projectedDeaths_10"]$value, na.rm = TRUE)
