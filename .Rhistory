}
# Clear workspace
rm(list = ls())
library(data.table)
library(ggplot2)
library(ggthemr)
ggthemr("flat")# Set theme -- controls all plots
library(gridExtra)
setwd("~/nfernand@princeton.edu/PhD - Thesis/Research/covid-19-data")
complete <- tidyr::complete
f0 <- 0.9  # initial fraction asymptomatic
f <- 0.9 # fraction of new cases that are asymptomatic
r <- 0.05 # fraction of cases that resolve each day
# Factor by which state-specific R is adjusted
factor <- 1
states <- fread("statesModified.csv")
deathRate <- states[ , .SD[.N], by = state][ , sum(na.omit(deaths)) / sum(na.omit(cases))]
states[ , impliedR_asymp_ma3 := (1/5) * Reduce(`+`, shift(impliedR_asymp,n = 0L:4L, type = "lag")), by = state]
states[ , impliedT_asymp_ma3 := (1/5) * Reduce(`+`, shift(impliedT_asymp,n = 0L:4L, type = "lag")), by = state]
Rtable <- states[ , .SD[.N], by = state][ , .(state,impliedR_asymp_ma3)]
Ttable <- states[ , .SD[.N], by = state][ , .(state,impliedT_asymp_ma3)]
setnames(Rtable,"impliedR_asymp_ma3","impliedR_last")
setnames(Ttable,"impliedT_asymp_ma3","impliedT_last")
necessaryR <- r / f
Rtable[ , necessaryFactor:= necessaryR / impliedR_last]
setkey(Rtable,state)
setkey(Ttable,state)
d = (deathRate / (1 - deathRate)) * r # Projected death rate per day
states[ , date := as.Date(date)]
# Extend dataset for each state until end of projection period
temp <- states[ , .(date = seq.Date(min(date),as.Date("2020-10-01"), by = "day")), by = state]
setkey(temp,state,date)
setkey(states,state,date)
states <- states[temp]
states <- Rtable[states]
states <- Ttable[states]
# Make projections
project <- function(asymptomatics,cases,deaths,vulnerablePopulation,impliedT)  {
projectedNewAsymptomatics <- vector(mode = "numeric", length = length(asymptomatics))
projectedNewCases <- vector(mode = "numeric", length = length(asymptomatics))
projectedNewDeaths <- vector(mode = "numeric", length = length(asymptomatics))
projectedAsymptomatics <- vector(mode = "numeric", length = length(asymptomatics))
projectedCases <- vector(mode = "numeric", length = length(asymptomatics))
projectedDeaths <- vector(mode = "numeric", length = length(asymptomatics))
projectedVulnerablePopulation <- vector(mode = "numeric", length = length(asymptomatics))
iMin <- max(which(!is.na(cases))) + 1
projectedAsymptomatics[iMin - 1] <- asymptomatics[iMin - 1]
projectedCases[iMin - 1] <- cases[iMin - 1]
projectedDeaths[iMin -1] <- deaths[iMin - 1]
projectedVulnerablePopulation[iMin -1] <- vulnerablePopulation[iMin -1]
for (i in iMin:length(asymptomatics)) {
projectedNewAsymptomatics[i] <- f * factor * impliedT[i] * projectedVulnerablePopulation[i-1] * projectedAsymptomatics[i-1]
projectedAsymptomatics[i] <- projectedAsymptomatics[i-1] * (1-r) + projectedNewAsymptomatics[i]
projectedNewCases[i] <- (1-f) * factor * impliedT[i] * projectedVulnerablePopulation[i-1] * projectedAsymptomatics[i-1]
projectedCases[i] <- projectedCases[i-1] * (1-r) + projectedNewCases[i]
projectedNewDeaths[i] <- d * projectedCases[i]
projectedDeaths[i] <- projectedDeaths[i-1] + projectedNewDeaths[i]
projectedVulnerablePopulation[i] <- projectedVulnerablePopulation[i-1] - projectedNewAsymptomatics[i] - projectedNewCases[i]
}
return(list(projectedNewAsymptomatics,projectedAsymptomatics,projectedNewCases,projectedCases,projectedNewDeaths,projectedDeaths,projectedVulnerablePopulation))
}
states[ , c("projectedNewAsymptomatics","projectedAsymptomatics","projectedNewCases","projectedCases","projectedNewDeaths","projectedDeaths","projectedVulnerablePopulation") := project(asymptomatics,cases_ongoing,deaths,vulnerablePopulation,impliedT_last), by = state ]
View(states)
# Clear workspace
rm(list = ls())
library(data.table)
library(ggplot2)
library(ggthemr)
ggthemr("flat")# Set theme -- controls all plots
library(gridExtra)
setwd("~/nfernand@princeton.edu/PhD - Thesis/Research/covid-19-data")
complete <- tidyr::complete
f0 <- 0.9  # initial fraction asymptomatic
f <- 0.9 # fraction of new cases that are asymptomatic
r <- 0.05 # fraction of cases that resolve each day
# Factor by which state-specific R is adjusted
factor <- 1
states <- fread("statesModified.csv")
deathRate <- states[ , .SD[.N], by = state][ , sum(na.omit(deaths)) / sum(na.omit(cases))]
states[ , impliedR_asymp_ma3 := (1/5) * Reduce(`+`, shift(impliedR_asymp,n = 0L:4L, type = "lag")), by = state]
states[ , impliedT_asymp_ma3 := (1/5) * Reduce(`+`, shift(impliedT_asymp,n = 0L:4L, type = "lag")), by = state]
Rtable <- states[ , .SD[.N], by = state][ , .(state,impliedR_asymp_ma3)]
Ttable <- states[ , .SD[.N], by = state][ , .(state,impliedT_asymp_ma3)]
setnames(Rtable,"impliedR_asymp_ma3","impliedR_last")
setnames(Ttable,"impliedT_asymp_ma3","impliedT_last")
necessaryR <- r / f
Rtable[ , necessaryFactor:= necessaryR / impliedR_last]
setkey(Rtable,state)
setkey(Ttable,state)
d = (deathRate / (1 - deathRate)) * r # Projected death rate per day
states[ , date := as.Date(date)]
# Extend dataset for each state until end of projection period
temp <- states[ , .(date = seq.Date(min(date),as.Date("2020-10-01"), by = "day")), by = state]
setkey(temp,state,date)
setkey(states,state,date)
states <- states[temp]
states <- Rtable[states]
states <- Ttable[states]
# Make projections
project <- function(asymptomatics,cases,deaths,vulnerablePopulation,impliedT)  {
projectedNewAsymptomatics <- vector(mode = "numeric", length = length(asymptomatics))
projectedNewCases <- vector(mode = "numeric", length = length(asymptomatics))
projectedNewDeaths <- vector(mode = "numeric", length = length(asymptomatics))
projectedAsymptomatics <- vector(mode = "numeric", length = length(asymptomatics))
projectedCases <- vector(mode = "numeric", length = length(asymptomatics))
projectedDeaths <- vector(mode = "numeric", length = length(asymptomatics))
projectedVulnerablePopulation <- vector(mode = "numeric", length = length(asymptomatics))
iMin <- max(which(!is.na(cases))) + 1
projectedAsymptomatics[iMin - 1] <- asymptomatics[iMin - 1]
projectedCases[iMin - 1] <- cases[iMin - 1]
projectedDeaths[iMin -1] <- deaths[iMin - 1]
projectedVulnerablePopulation[iMin -1] <- vulnerablePopulation[iMin -1]
for (i in iMin:length(asymptomatics)) {
projectedNewAsymptomatics[i] <- f * factor * impliedT[i] * projectedVulnerablePopulation[i-1] * projectedAsymptomatics[i-1]
projectedAsymptomatics[i] <- projectedAsymptomatics[i-1] * (1-r) + projectedNewAsymptomatics[i]
projectedNewCases[i] <- (1-f) * factor * impliedT[i] * projectedVulnerablePopulation[i-1] * projectedAsymptomatics[i-1]
projectedCases[i] <- projectedCases[i-1] * (1-r) + projectedNewCases[i]
projectedNewDeaths[i] <- d * projectedCases[i]
projectedDeaths[i] <- projectedDeaths[i-1] + projectedNewDeaths[i]
projectedVulnerablePopulation[i] <- projectedVulnerablePopulation[i-1] - projectedNewAsymptomatics[i] - projectedNewCases[i]
}
return(list(projectedNewAsymptomatics,projectedAsymptomatics,projectedNewCases,projectedCases,projectedNewDeaths,projectedDeaths,projectedVulnerablePopulation))
}
states[ , c("projectedNewAsymptomatics","projectedAsymptomatics","projectedNewCases","projectedCases","projectedNewDeaths","projectedDeaths","projectedVulnerablePopulation") := project(asymptomatics,cases_ongoing,deaths,vulnerablePopulation,impliedT_last), by = state ]
# Make plots
states[ projectedCases == 0.0, projectedCases := NA]
states[ projectedAsymptomatics == 0.0, projectedAsymptomatics := NA]
states[ projectedDeaths == 0.0, projectedDeaths := NA]
ggplot(states, aes(x = date)) +
geom_line(aes(y = log(cases_ongoing), linetype = "Ongoing cases (actual, estimated)")) +
geom_line(aes(y = log(projectedCases), linetype = "Ongoing cases (projected)")) +
facet_wrap(~state) +
theme(axis.text.x = element_text(angle = 90))
ggsave("US_states_corona_cases_projections.pdf",plot = last_plot(), width = 18, height = 13, units = "in")
ggplot(states, aes(x = date)) +
geom_line(aes(y = log(asymptomatics), linetype = "Asymptomatics (actual, estimated)")) +
geom_line(aes(y = log(projectedAsymptomatics), linetype = "Asymptomatics (projected)")) +
facet_wrap(~state) +
theme(axis.text.x = element_text(angle = 90))
ggsave("US_states_corona_asymptomatics_projections.pdf",plot = last_plot(), width = 18, height = 13, units = "in")
ggplot(states, aes(x = date)) +
geom_line(aes(y = log(deaths), linetype = "Deaths (actual)")) +
geom_line(aes(y = log(projectedDeaths), linetype = "Deaths (projected)")) +
facet_wrap(~state) +
theme(axis.text.x = element_text(angle = 90))
ggsave("US_states_corona_deaths_projections.pdf",plot = last_plot(), width = 18, height = 13, units = "in")
# Plot necessary factors
ggplot(Rtable[ , .(necessaryFactor)] , aes(x = necessaryFactor)) +
geom_histogram(bins = 50) +
stat_density(geom = "line")
ggsave("necessaryR_adjustment.pdf", plot = last_plot(), width = 10, height = 6, units = "in")
View(states)
# Clear workspace
rm(list = ls())
library(data.table)
library(ggplot2)
library(ggthemr)
ggthemr("flat")# Set theme -- controls all plots
library(gridExtra)
setwd("~/nfernand@princeton.edu/PhD - Thesis/Research/covid-19-data")
#  Parameters for state space estimation of asymptomatic daily R
f0 <- 0.9  # initial fraction asymptomatic
f <- 0.9 # fraction of new cases that are asymptomatic
r <- 0.05 # fraction of cases that resolve each day
states <- fread("us-states.csv")
population <- fread("nst-est2019-alldata.csv")
setkey(population,STATE)
setkey(states,fips)
states <- population[ , .(STATE,POPESTIMATE2019)][states]
setkey(states,state,date)
BigStates <- c("New York","California","Washington","District of Columbia","Illinois","New Jersey","Texas","Michigan","Massachusetts","Florida","Louisiana","Pennsylvania")
states[ , date := as.Date(date)]
states[ , index := rowid(state) - 1]
states[ , logCases := log(cases)]
states[ , logDeaths := log(deaths)]
states[ , newCasesRaw := cases - shift(cases), by = state]
states[ , newDeathsRaw := deaths - shift(deaths), by = state]
states[ , newCases := logCases - shift(logCases), by = state]
states[ , newDeaths := logDeaths - shift(logDeaths), by = state]
states[ , currentCases := cases - deaths]
states[ , newCasesAdjusted := newCasesRaw / shift(currentCases), by = state]
# Con
states[ , newAsymptomaticRaw := newCasesRaw * (f / (1-f)) ]
states[states[ , .I[1], by = state]$V1, newAsymptomaticRaw := (f0 / (1-f0)) * cases]
filter <- function(cases,newCases,newAsymp,deaths,newDeaths,idx) {
asymp <- vector(mode = "numeric", length = length(idx))
cases <- vector(mode = "numeric", length = length(idx))
immune <- vector(mode = "numeric", length = length(idx))
asymp[1] <- newAsymp[1]
newCases[1] <- cases[1]
newDeaths[1] <- deaths[1]
for (i in 2:length(idx)) {
discountFactor <- (1-r)^(i-idx[1:i-1])
asymp[i] <- sum( newAsymp[1:i-1] * discountFactor) + newAsymp[i]
cases[i] <- sum( (newCases[1:i-1] - newDeaths[1:i-1]) * discountFactor) + newCases[i]
immune[i] <- sum( (newAsymp[1:i-1] + (newCases[1:i-1] - newDeaths[1:i-1])) * (1- discountFactor) )
}
return(list(asymp,cases,immune))
}
states[ , c("asymptomatics","cases_ongoing","immune") := filter(cases,newCasesRaw,newAsymptomaticRaw,deaths,newDeathsRaw,index), by = state]
View(states)
# Clear workspace
rm(list = ls())
library(data.table)
library(ggplot2)
library(ggthemr)
ggthemr("flat")# Set theme -- controls all plots
library(gridExtra)
setwd("~/nfernand@princeton.edu/PhD - Thesis/Research/covid-19-data")
#  Parameters for state space estimation of asymptomatic daily R
f0 <- 0.9  # initial fraction asymptomatic
f <- 0.9 # fraction of new cases that are asymptomatic
r <- 0.05 # fraction of cases that resolve each day
states <- fread("us-states.csv")
population <- fread("nst-est2019-alldata.csv")
setkey(population,STATE)
setkey(states,fips)
states <- population[ , .(STATE,POPESTIMATE2019)][states]
setkey(states,state,date)
BigStates <- c("New York","California","Washington","District of Columbia","Illinois","New Jersey","Texas","Michigan","Massachusetts","Florida","Louisiana","Pennsylvania")
states[ , date := as.Date(date)]
states[ , index := rowid(state) - 1]
states[ , logCases := log(cases)]
states[ , logDeaths := log(deaths)]
states[ , newCasesRaw := cases - shift(cases), by = state]
states[ , newDeathsRaw := deaths - shift(deaths), by = state]
states[ , newCases := logCases - shift(logCases), by = state]
states[ , newDeaths := logDeaths - shift(logDeaths), by = state]
states[ , currentCases := cases - deaths]
states[ , newCasesAdjusted := newCasesRaw / shift(currentCases), by = state]
# Con
states[ , newAsymptomaticRaw := newCasesRaw * (f / (1-f)) ]
states[states[ , .I[1], by = state]$V1, newAsymptomaticRaw := (f0 / (1-f0)) * cases]
filter <- function(cases,newCases,newAsymp,deaths,newDeaths,idx) {
asymp <- vector(mode = "numeric", length = length(idx))
cases <- vector(mode = "numeric", length = length(idx))
immune <- vector(mode = "numeric", length = length(idx))
asymp[1] <- newAsymp[1]
newCases[1] <- cases[1]
newDeaths[1] <- deaths[1]
for (i in 2:length(idx)) {
discountFactor <- (1-r)^(i-idx[1:i-1])
asymp[i] <- sum( newAsymp[1:i-1] * discountFactor) + newAsymp[i]
cases[i] <- sum( (newCases[1:i-1] - newDeaths[1:i-1]) * discountFactor) + newCases[i]
immune[i] <- sum( (newAsymp[1:i-1] + (newCases[1:i-1] - newDeaths[1:i-1])) * (1- discountFactor) )
}
return(list(asymp,cases,immune))
}
states[ , c("asymptomatics","cases_ongoing","immune") := filter(cases,newCasesRaw,newAsymptomaticRaw,deaths,newDeathsRaw,index), by = state]
states[ , vulnerablePopulation := POPESTIMATE2019 - asymptomatics - cases_ongoing - immune - deaths]
states[ , impliedR_asymp := newAsymptomaticRaw / (f * shift(asymptomatics)), by = state]
states[ , impliedT_asymp := newAsymptomaticRaw / (f * shift(vulnerablePopulation) * shift(asymptomatics)), by = state]
fwrite(states,"statesModified.csv")
ggplot(data = states[], aes(x = date, y = impliedT_asymp, group = state)) +
geom_line() +
facet_wrap(~state) +
labs(title = "Implied daily T") +
theme(axis.text.x = element_text(angle = 90))
ggsave("US_states_corona_cases_impliedTasymp_adjusted.pdf",plot = last_plot(), width = 18, height = 13, units = "in")
states[ , impliedT_asymp_standardized := (impliedT_asymp - mean(na.omit(impliedT_asymp)) ) / sd(na.omit(impliedT_asymp)), by = state]
ggplot(data = states[], aes(x = date, y = impliedT_asymp_standardized, group = state)) +
geom_line() +
facet_wrap(~state) +
labs(title = "Implied daily T") +
theme(axis.text.x = element_text(angle = 90))
ggsave("US_states_corona_cases_impliedTasymp_adjusted.pdf",plot = last_plot(), width = 18, height = 13, units = "in")
# Clear workspace
rm(list = ls())
library(data.table)
library(ggplot2)
library(ggthemr)
ggthemr("flat")# Set theme -- controls all plots
library(gridExtra)
setwd("~/nfernand@princeton.edu/PhD - Thesis/Research/covid-19-data")
complete <- tidyr::complete
f0 <- 0.9  # initial fraction asymptomatic
f <- 0.9 # fraction of new cases that are asymptomatic
r <- 0.05 # fraction of cases that resolve each day
# Factor by which state-specific R is adjusted
factor <- 1
states <- fread("statesModified.csv")
deathRate <- states[ , .SD[.N], by = state][ , sum(na.omit(deaths)) / sum(na.omit(cases))]
states[ , impliedR_asymp_ma3 := (1/5) * Reduce(`+`, shift(impliedR_asymp,n = 0L:4L, type = "lag")), by = state]
states[ , impliedT_asymp_ma3 := (1/5) * Reduce(`+`, shift(impliedT_asymp,n = 0L:4L, type = "lag")), by = state]
Rtable <- states[ , .SD[.N], by = state][ , .(state,impliedR_asymp_ma3)]
Ttable <- states[ , .SD[.N], by = state][ , .(state,impliedT_asymp_ma3)]
setnames(Rtable,"impliedR_asymp_ma3","impliedR_last")
setnames(Ttable,"impliedT_asymp_ma3","impliedT_last")
necessaryR <- r / f
Rtable[ , necessaryFactor:= necessaryR / impliedR_last]
setkey(Rtable,state)
setkey(Ttable,state)
d = (deathRate / (1 - deathRate)) * r # Projected death rate per day
states[ , date := as.Date(date)]
# Extend dataset for each state until end of projection period
temp <- states[ , .(date = seq.Date(min(date),as.Date("2020-08-01"), by = "day")), by = state]
setkey(temp,state,date)
setkey(states,state,date)
states <- states[temp]
states <- Rtable[states]
states <- Ttable[states]
# Make projections
project <- function(asymptomatics,cases,deaths,vulnerablePopulation,impliedT)  {
projectedNewAsymptomatics <- vector(mode = "numeric", length = length(asymptomatics))
projectedNewCases <- vector(mode = "numeric", length = length(asymptomatics))
projectedNewDeaths <- vector(mode = "numeric", length = length(asymptomatics))
projectedAsymptomatics <- vector(mode = "numeric", length = length(asymptomatics))
projectedCases <- vector(mode = "numeric", length = length(asymptomatics))
projectedDeaths <- vector(mode = "numeric", length = length(asymptomatics))
projectedVulnerablePopulation <- vector(mode = "numeric", length = length(asymptomatics))
iMin <- max(which(!is.na(cases))) + 1
projectedAsymptomatics[iMin - 1] <- asymptomatics[iMin - 1]
projectedCases[iMin - 1] <- cases[iMin - 1]
projectedDeaths[iMin -1] <- deaths[iMin - 1]
projectedVulnerablePopulation[iMin -1] <- vulnerablePopulation[iMin -1]
for (i in iMin:length(asymptomatics)) {
projectedNewAsymptomatics[i] <- f * factor * impliedT[i] * projectedVulnerablePopulation[i-1] * projectedAsymptomatics[i-1]
projectedAsymptomatics[i] <- projectedAsymptomatics[i-1] * (1-r) + projectedNewAsymptomatics[i]
projectedNewCases[i] <- (1-f) * factor * impliedT[i] * projectedVulnerablePopulation[i-1] * projectedAsymptomatics[i-1]
projectedCases[i] <- projectedCases[i-1] * (1-r) + projectedNewCases[i]
projectedNewDeaths[i] <- d * projectedCases[i]
projectedDeaths[i] <- projectedDeaths[i-1] + projectedNewDeaths[i]
projectedVulnerablePopulation[i] <- projectedVulnerablePopulation[i-1] - projectedNewAsymptomatics[i] - projectedNewCases[i]
}
return(list(projectedNewAsymptomatics,projectedAsymptomatics,projectedNewCases,projectedCases,projectedNewDeaths,projectedDeaths,projectedVulnerablePopulation))
}
states[ , c("projectedNewAsymptomatics","projectedAsymptomatics","projectedNewCases","projectedCases","projectedNewDeaths","projectedDeaths","projectedVulnerablePopulation") := project(asymptomatics,cases_ongoing,deaths,vulnerablePopulation,impliedT_last), by = state ]
# Make plots
states[ projectedCases == 0.0, projectedCases := NA]
states[ projectedAsymptomatics == 0.0, projectedAsymptomatics := NA]
states[ projectedDeaths == 0.0, projectedDeaths := NA]
ggplot(states, aes(x = date)) +
geom_line(aes(y = log(cases_ongoing), linetype = "Ongoing cases (actual, estimated)")) +
geom_line(aes(y = log(projectedCases), linetype = "Ongoing cases (projected)")) +
facet_wrap(~state) +
theme(axis.text.x = element_text(angle = 90))
ggsave("US_states_corona_cases_projections.pdf",plot = last_plot(), width = 18, height = 13, units = "in")
ggplot(states, aes(x = date)) +
geom_line(aes(y = log(asymptomatics), linetype = "Asymptomatics (actual, estimated)")) +
geom_line(aes(y = log(projectedAsymptomatics), linetype = "Asymptomatics (projected)")) +
facet_wrap(~state) +
theme(axis.text.x = element_text(angle = 90))
ggsave("US_states_corona_asymptomatics_projections.pdf",plot = last_plot(), width = 18, height = 13, units = "in")
ggplot(states, aes(x = date)) +
geom_line(aes(y = log(deaths), linetype = "Deaths (actual)")) +
geom_line(aes(y = log(projectedDeaths), linetype = "Deaths (projected)")) +
facet_wrap(~state) +
theme(axis.text.x = element_text(angle = 90))
ggsave("US_states_corona_deaths_projections.pdf",plot = last_plot(), width = 18, height = 13, units = "in")
# Plot necessary factors
ggplot(Rtable[ , .(necessaryFactor)] , aes(x = necessaryFactor)) +
geom_histogram(bins = 50) +
stat_density(geom = "line")
ggsave("necessaryR_adjustment.pdf", plot = last_plot(), width = 10, height = 6, units = "in")
View(states)
UStotals <- states[ , .(projectedCases = sum(na.omit(projectedCases)),projectedAsymptomatics = sum(na.omit(projectedAsymptomatics)), projectedDeaths = sum(na.omit(projectedDeaths))), by = date]
View(UStotals)
setkey(UStotals,date)
View(UStotals)
UStotals <- states[ , .(projectedCases = sum(na.omit(projectedCases)),projectedAsymptomatics = sum(na.omit(projectedAsymptomatics)), projectedDeaths = sum(na.omit(projectedDeaths)),
cases_ongoing = sum(na.omit(cases_ongoing)), asymptomatics = sum(na.omit(asymptomatics)), deaths = sum(na.omit(deaths))), by = date]
View(UStotals)
setkey(UStotals,date)
View(UStotals)
View(states)
ggplot(UStotals, aes(x = date)) +
geom_line(aes(y = log(cases_ongoing), linetype = "Actual", color = "Cases (ongoing)")) +
geom_line(aes(y = log(projectedCases), linetype = "Projected", color = "Cases (ongoing)")) +
facet_wrap(~state) +
theme(axis.text.x = element_text(angle = 90))
ggplot(UStotals, aes(x = date)) +
geom_line(aes(y = log(cases_ongoing), linetype = "Actual", color = "Cases (ongoing)")) +
geom_line(aes(y = log(projectedCases), linetype = "Projected", color = "Cases (ongoing)"))
states[ cases_ongoing == 0.0, cases_ongoing := NA]
states[ asymptomatics == 0.0, asymptomatics := NA]
UStotals <- states[ , .(projectedCases = sum(na.omit(projectedCases)),projectedAsymptomatics = sum(na.omit(projectedAsymptomatics)), projectedDeaths = sum(na.omit(projectedDeaths)),
cases_ongoing = sum(na.omit(cases_ongoing)), asymptomatics = sum(na.omit(asymptomatics)), deaths = sum(na.omit(deaths))), by = date]
setkey(UStotals,date)
ggplot(UStotals, aes(x = date)) +
geom_line(aes(y = log(cases_ongoing), linetype = "Actual", color = "Cases (ongoing)")) +
geom_line(aes(y = log(projectedCases), linetype = "Projected", color = "Cases (ongoing)"))
View(UStotals)
states[ projectedCases == 0, projectedCases := NA]
states[ projectedAsymptomatics == 0, projectedAsymptomatics := NA]
states[ projectedDeaths == 0, projectedDeaths := NA]
states[ cases_ongoing == 0, cases_ongoing := NA]
states[ asymptomatics == 0, asymptomatics := NA]
#states[ projectedDeaths == 0.0, deaths := NA]
UStotals <- states[ , .(projectedCases = sum(na.omit(projectedCases)),projectedAsymptomatics = sum(na.omit(projectedAsymptomatics)), projectedDeaths = sum(na.omit(projectedDeaths)),
cases_ongoing = sum(na.omit(cases_ongoing)), asymptomatics = sum(na.omit(asymptomatics)), deaths = sum(na.omit(deaths))), by = date]
setkey(UStotals,date)
ggplot(UStotals, aes(x = date)) +
geom_line(aes(y = log(cases_ongoing), linetype = "Actual", color = "Cases (ongoing)")) +
geom_line(aes(y = log(projectedCases), linetype = "Projected", color = "Cases (ongoing)"))
View(UStotals)
states[ projectedCases == 0, projectedCases := NA]
states[ projectedAsymptomatics == 0, projectedAsymptomatics := NA]
states[ projectedDeaths == 0, projectedDeaths := NA]
states[ cases_ongoing == 0, cases_ongoing := NA]
states[ asymptomatics == 0, asymptomatics := NA]
#states[ projectedDeaths == 0.0, deaths := NA]
UStotals <- states[ , .(projectedCases = sum(na.omit(projectedCases)),projectedAsymptomatics = sum(na.omit(projectedAsymptomatics)), projectedDeaths = sum(na.omit(projectedDeaths)),
cases_ongoing = sum(na.omit(cases_ongoing)), asymptomatics = sum(na.omit(asymptomatics)), deaths = sum(na.omit(deaths))), by = date]
setkey(UStotals,date)
UStotals[ projectedCases == 0, projectedCases := NA]
UStotals[ projectedAsymptomatics == 0, projectedAsymptomatics := NA]
UStotals[ projectedDeaths == 0, projectedDeaths := NA]
UStotals[ cases_ongoing == 0, cases_ongoing := NA]
UStotals[ asymptomatics == 0, asymptomatics := NA]
ggplot(UStotals, aes(x = date)) +
geom_line(aes(y = log(cases_ongoing), linetype = "Actual", color = "Cases (ongoing)")) +
geom_line(aes(y = log(projectedCases), linetype = "Projected", color = "Cases (ongoing)"))
ggplot(UStotals, aes(x = date)) +
geom_line(aes(y = log(cases_ongoing), linetype = "Actual", color = "Cases (ongoing)")) +
geom_line(aes(y = log(projectedCases), linetype = "Projected", color = "Cases (ongoing)")) +
geom_line(aes(y = log(asymptomatics), linetype = "Actual", color = "Asymptomatics (ongoing)")) +
geom_line(aes(y = log(projectedAsymptomatics), linetype = "Projected", color = "Asymptomatics (ongoing)")) +
geom_line(aes(y = log(deaths), linetype = "Actual", color = "Deaths")) +
geom_line(aes(y = log(projectedDeaths), linetype = "Projected", color = "Deaths"))
UStotals[ deaths == 0, deaths := NA]
ggplot(UStotals, aes(x = date)) +
geom_line(aes(y = log(cases_ongoing), linetype = "Actual", color = "Cases (ongoing)")) +
geom_line(aes(y = log(projectedCases), linetype = "Projected", color = "Cases (ongoing)")) +
geom_line(aes(y = log(asymptomatics), linetype = "Actual", color = "Asymptomatics (ongoing)")) +
geom_line(aes(y = log(projectedAsymptomatics), linetype = "Projected", color = "Asymptomatics (ongoing)")) +
geom_line(aes(y = log(deaths), linetype = "Actual", color = "Deaths")) +
geom_line(aes(y = log(projectedDeaths), linetype = "Projected", color = "Deaths"))
ggplot(UStotals, aes(x = date)) +
geom_line(aes(y = log(cases_ongoing), linetype = "Actual", color = "Cases (ongoing)")) +
geom_line(aes(y = log(projectedCases), linetype = "Projected", color = "Cases (ongoing)")) +
geom_line(aes(y = log(asymptomatics), linetype = "Actual", color = "Asymptomatics (ongoing)")) +
geom_line(aes(y = log(projectedAsymptomatics), linetype = "Projected", color = "Asymptomatics (ongoing)")) +
geom_line(aes(y = log(deaths), linetype = "Actual", color = "Deaths (cumulative)")) +
geom_line(aes(y = log(projectedDeaths), linetype = "Projected", color = "Deaths (cumulative)")) +
labs(title = "US total")
ggplot(UStotals, aes(x = date)) +
geom_line(aes(y = log(cases_ongoing), linetype = "Actual", color = "Cases (ongoing)")) +
geom_line(aes(y = log(projectedCases), linetype = "Projected", color = "Cases (ongoing)")) +
geom_line(aes(y = log(asymptomatics), linetype = "Actual", color = "Asymptomatics (ongoing)")) +
geom_line(aes(y = log(projectedAsymptomatics), linetype = "Projected", color = "Asymptomatics (ongoing)")) +
geom_line(aes(y = log(deaths), linetype = "Actual", color = "Deaths (cumulative)")) +
geom_line(aes(y = log(projectedDeaths), linetype = "Projected", color = "Deaths (cumulative)")) +
labs(title = "US total") +
ylab("Log # people")
ggplot(UStotals, aes(x = date)) +
geom_line(aes(y = log(cases_ongoing), linetype = "Actual", color = "Cases (ongoing)")) +
geom_line(aes(y = log(projectedCases), linetype = "Projected", color = "Cases (ongoing)")) +
geom_line(aes(y = log(asymptomatics), linetype = "Actual", color = "Asymptomatics (ongoing)")) +
geom_line(aes(y = log(projectedAsymptomatics), linetype = "Projected", color = "Asymptomatics (ongoing)")) +
geom_line(aes(y = log(deaths), linetype = "Actual", color = "Deaths (cumulative)")) +
geom_line(aes(y = log(projectedDeaths), linetype = "Projected", color = "Deaths (cumulative)")) +
labs(title = "US total") +
ylab("Log(# of people)")
ggplot(UStotals, aes(x = date)) +
geom_line(aes(y = log(cases_ongoing), linetype = "Actual", color = "Cases (ongoing)")) +
geom_line(aes(y = log(projectedCases), linetype = "Projected", color = "Cases (ongoing)")) +
geom_line(aes(y = log(asymptomatics), linetype = "Actual", color = "Asymptomatics (ongoing)")) +
geom_line(aes(y = log(projectedAsymptomatics), linetype = "Projected", color = "Asymptomatics (ongoing)")) +
geom_line(aes(y = log(deaths), linetype = "Actual", color = "Deaths (cumulative)")) +
geom_line(aes(y = log(projectedDeaths), linetype = "Projected", color = "Deaths (cumulative)")) +
labs(title = "US total") +
ylab("Log(# of people)") +
xlab("Date")
ggplot(UStotals, aes(x = date)) +
geom_line(aes(y = log(cases_ongoing), linetype = "Actual", color = "Cases (ongoing)")) +
geom_line(aes(y = log(projectedCases), linetype = "Projected", color = "Cases (ongoing)")) +
geom_line(aes(y = log(asymptomatics), linetype = "Actual", color = "Asymptomatics (ongoing)")) +
geom_line(aes(y = log(projectedAsymptomatics), linetype = "Projected", color = "Asymptomatics (ongoing)")) +
geom_line(aes(y = log(deaths), linetype = "Actual", color = "Deaths (cumulative)")) +
geom_line(aes(y = log(projectedDeaths), linetype = "Projected", color = "Deaths (cumulative)")) +
scale_x_continuous(breaks = round(seq.Date(min(UStotals$date), max(UStotals$date), by = "week"),1))
labs(title = "US total") +
ylab("Log(# of people)") +
xlab("Date")
ggplot(UStotals, aes(x = date)) +
geom_line(aes(y = log(cases_ongoing), linetype = "Actual", color = "Cases (ongoing)")) +
geom_line(aes(y = log(projectedCases), linetype = "Projected", color = "Cases (ongoing)")) +
geom_line(aes(y = log(asymptomatics), linetype = "Actual", color = "Asymptomatics (ongoing)")) +
geom_line(aes(y = log(projectedAsymptomatics), linetype = "Projected", color = "Asymptomatics (ongoing)")) +
geom_line(aes(y = log(deaths), linetype = "Actual", color = "Deaths (cumulative)")) +
geom_line(aes(y = log(projectedDeaths), linetype = "Projected", color = "Deaths (cumulative)")) +
scale_x_date(date_breaks = "1 week") +
labs(title = "US total") +
ylab("Log(# of people)") +
xlab("Date")
ggplot(UStotals, aes(x = date)) +
geom_line(aes(y = log(cases_ongoing), linetype = "Actual", color = "Cases (ongoing)")) +
geom_line(aes(y = log(projectedCases), linetype = "Projected", color = "Cases (ongoing)")) +
geom_line(aes(y = log(asymptomatics), linetype = "Actual", color = "Asymptomatics (ongoing)")) +
geom_line(aes(y = log(projectedAsymptomatics), linetype = "Projected", color = "Asymptomatics (ongoing)")) +
geom_line(aes(y = log(deaths), linetype = "Actual", color = "Deaths (cumulative)")) +
geom_line(aes(y = log(projectedDeaths), linetype = "Projected", color = "Deaths (cumulative)")) +
scale_x_date(date_breaks = "1 week") +
labs(title = "US total") +
ylab("Log(# of people)") +
xlab("Date") +
theme(axis.text.x = element_text(angle = 90))
ggplot(UStotals, aes(x = date)) +
geom_line(aes(y = log(cases_ongoing), linetype = "Actual", color = "Cases (ongoing)")) +
geom_line(aes(y = log(projectedCases), linetype = "Projected", color = "Cases (ongoing)")) +
geom_line(aes(y = log(asymptomatics), linetype = "Actual", color = "Asymptomatics (ongoing)")) +
geom_line(aes(y = log(projectedAsymptomatics), linetype = "Projected", color = "Asymptomatics (ongoing)")) +
geom_line(aes(y = log(deaths), linetype = "Actual", color = "Deaths (cumulative)")) +
geom_line(aes(y = log(projectedDeaths), linetype = "Projected", color = "Deaths (cumulative)")) +
scale_x_date(date_breaks = "2 weeks") +
labs(title = "US total") +
ylab("Log(# of people)") +
xlab("Date") +
theme(axis.text.x = element_text(angle = 90))
ggsave("US_corona_projections.pdf",plot = last_plot(), width = 18, height = 13, units = "in")
ggsave("US_corona_projections.pdf",plot = last_plot(), width = 10, height = 6, units = "in")
View(UStotals)
